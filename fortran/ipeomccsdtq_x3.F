      SUBROUTINE ipeomccsdtq_x3(d_f1,d_i0,d_t1,d_t2,d_t3,d_t4,d_v2,d_x1,
     &d_x2,d_x3,d_x4,k_f1_offset,k_i0_offset,k_t1_offset,k_t2_offset,k_t
     &3_offset,k_t4_offset,k_v2_offset,k_x1_offset,k_x2_offset,k_x3_offs
     &et,k_x4_offset)
C     $Id$
C     This is a Fortran77 program generated by Tensor Contraction Engine v.1.0
C     
C     
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1 * P( 6 ) * Sum ( h11 ) * x ( p4 h1 h11 )_x * i1 ( h11 p5 h2 h3 )_v
C         i1 ( h11 p4 h1 h2 )_v + = 1 * v ( h11 p4 h1 h2 )_v
C         i1 ( h11 p4 h1 h2 )_vt + = 1 * Sum ( h12 ) * t ( p4 h12 )_t * i2 ( h11 h12 h1 h2 )_v
C             i2 ( h11 h12 h1 h2 )_v + = -1 * v ( h11 h12 h1 h2 )_v
C             i2 ( h11 h12 h1 h2 )_vt + = 1 * P( 2 ) * Sum ( p8 ) * t ( p8 h1 )_t * i3 ( h11 h12 h2 p8 )_v
C                 i3 ( h11 h12 h1 p8 )_v + = 1 * v ( h11 h12 h1 p8 )_v
C                 i3 ( h11 h12 h1 p8 )_vt + = -1/2 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h11 h12 p8 p9 )_v
C             i2 ( h11 h12 h1 h2 )_vt + = -1/2 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * v ( h11 h12 p7 p8 )_v
C         i1 ( h11 p4 h1 h2 )_vt + = -1 * P( 2 ) * Sum ( p7 ) * t ( p7 h1 )_t * i2 ( h11 p4 h2 p7 )_v
C             i2 ( h11 p4 h1 p7 )_v + = 1 * v ( h11 p4 h1 p7 )_v
C             i2 ( h11 p4 h1 p7 )_vt + = -1/2 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h11 p4 p7 p8 )_v
C         i1 ( h11 p4 h1 h2 )_ft + = -1 * Sum ( p10 ) * t ( p4 p10 h1 h2 )_t * i2 ( h11 p10 )_f
C             i2 ( h11 p10 )_f + = 1 * f ( h11 p10 )_f
C             i2 ( h11 p10 )_vt + = 1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p8 p10 )_v
C         i1 ( h11 p4 h1 h2 )_vt + = 1 * P( 2 ) * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * i2 ( h8 h11 h2 p7 )_v
C             i2 ( h8 h11 h1 p7 )_v + = 1 * v ( h8 h11 h1 p7 )_v
C             i2 ( h8 h11 h1 p7 )_vt + = -1 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h8 h11 p7 p9 )_v
C         i1 ( h11 p4 h1 h2 )_vt + = 1/2 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * v ( h11 p4 p7 p8 )_v
C         i1 ( h11 p4 h1 h2 )_vt + = 1/2 * Sum ( h9 p7 p8 ) * t ( p4 p7 p8 h1 h2 h9 )_t * v ( h9 h11 p7 p8 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1 * P( 3 ) * Sum ( p11 ) * x ( p11 h1 h2 )_x * i1 ( p4 p5 h3 p11 )_v
C         i1 ( p4 p5 h1 p11 )_v + = 1 * v ( p4 p5 h1 p11 )_v
C         i1 ( p4 p5 h1 p11 )_vt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * v ( p4 p5 p7 p11 )_v
C         i1 ( p4 p5 h1 p11 )_vt + = 1/2 * Sum ( h7 h8 ) * t ( p4 p5 h7 h8 )_t * i2 ( h7 h8 h1 p11 )_v
C             i2 ( h7 h8 h1 p11 )_v + = 1 * v ( h7 h8 h1 p11 )_v
C             i2 ( h7 h8 h1 p11 )_vt + = 1 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h7 h8 p9 p11 )_v
C         i1 ( p4 p5 h1 p11 )_vt + = 1 * P( 2 ) * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * v ( h8 p5 p7 p11 )_v
C         i1 ( p4 p5 h1 p11 )_vt + = 1/2 * Sum ( h8 h9 p7 ) * t ( p4 p5 p7 h1 h8 h9 )_t * v ( h8 h9 p7 p11 )_v
C         i1 ( p4 p5 h1 p11 )_vtt + = 1 * P( 2 ) * Sum ( h9 ) * t ( p4 h9 )_t * i2 ( h9 p5 h1 p11 )_vt
C             i2 ( h9 p4 h1 p11 )_vt + = 1 * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * v ( h8 h9 p7 p11 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xf + = -1 * P( 3 ) * Sum ( h10 ) * x ( p4 p5 h1 h2 h10 )_x * i1 ( h10 h3 )_f
C         i1 ( h10 h1 )_f + = 1 * f ( h10 h1 )_f
C         i1 ( h10 h1 )_ft + = 1 * Sum ( p11 ) * t ( p11 h1 )_t * i2 ( h10 p11 )_f
C             i2 ( h10 p11 )_f + = 1 * f ( h10 p11 )_f
C             i2 ( h10 p11 )_vt + = 1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h10 p8 p11 )_v
C         i1 ( h10 h1 )_vt + = -1 * Sum ( h8 p7 ) * t ( p7 h8 )_t * v ( h8 h10 h1 p7 )_v
C         i1 ( h10 h1 )_vt + = -1/2 * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * v ( h9 h10 p7 p8 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xf + = 1 * P( 2 ) * Sum ( p10 ) * x ( p4 p10 h1 h2 h3 )_x * i1 ( p5 p10 )_f
C         i1 ( p4 p10 )_f + = 1 * f ( p4 p10 )_f
C         i1 ( p4 p10 )_vt + = 1 * Sum ( h8 p7 ) * t ( p7 h8 )_t * v ( h8 p4 p7 p10 )_v
C         i1 ( p4 p10 )_vt + = 1/2 * Sum ( h8 h9 p7 ) * t ( p4 p7 h8 h9 )_t * v ( h8 h9 p7 p10 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * P( 3 ) * Sum ( h11 h12 ) * x ( p4 p5 h1 h11 h12 )_x * i1 ( h11 h12 h2 h3 )_v
C         i1 ( h11 h12 h1 h2 )_v + = 1 * v ( h11 h12 h1 h2 )_v
C         i1 ( h11 h12 h1 h2 )_vt + = -1 * P( 2 ) * Sum ( p7 ) * t ( p7 h1 )_t * i2 ( h11 h12 h2 p7 )_v
C             i2 ( h11 h12 h1 p7 )_v + = 1 * v ( h11 h12 h1 p7 )_v
C             i2 ( h11 h12 h1 p7 )_vt + = -1/2 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h11 h12 p7 p8 )_v
C         i1 ( h11 h12 h1 h2 )_vt + = 1/2 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * v ( h11 h12 p7 p8 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xv + = -1 * P( 6 ) * Sum ( p10 h9 ) * x ( p4 p10 h1 h2 h9 )_x * i1 ( h9 p5 h3 p10 )_v
C         i1 ( h9 p4 h1 p10 )_v + = 1 * v ( h9 p4 h1 p10 )_v
C         i1 ( h9 p4 h1 p10 )_vt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * v ( h9 p4 p7 p10 )_v
C         i1 ( h9 p4 h1 p10 )_vt + = -1 * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * v ( h8 h9 p7 p10 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * Sum ( p7 p8 ) * x ( p7 p8 h1 h2 h3 )_x * v ( p4 p5 p7 p8 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xf + = -1 * Sum ( p11 h10 ) * x ( p4 p5 p11 h1 h2 h3 h10 )_x * i1 ( h10 p11 )_f
C         i1 ( h10 p11 )_f + = 1 * f ( h10 p11 )_f
C         i1 ( h10 p11 )_vt + = 1 * Sum ( h8 p7 ) * t ( p7 h8 )_t * v ( h8 h10 p7 p11 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * P( 3 ) * Sum ( p11 h10 h12 ) * x ( p4 p5 p11 h1 h2 h10 h12 )_x * i1 ( h10 h12 h3 p11 )_v
C         i1 ( h10 h12 h1 p11 )_v + = 1 * v ( h10 h12 h1 p11 )_v
C         i1 ( h10 h12 h1 p11 )_vt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * v ( h10 h12 p7 p11 )_v
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * P( 2 ) * Sum ( p8 p9 h7 ) * x ( p4 p8 p9 h1 h2 h3 h7 )_x * v ( h7 p5 p8 p9 )_v
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -3 * P( 2 ) * Sum ( h11 ) * t ( p4 h11 )_t * i1 ( h11 p5 h1 h2 h3 )_vx
C         i1 ( h11 p4 h1 h2 h3 )_vx + = 1/3 * P( 3 ) * Sum ( p10 ) * x ( p10 h1 h2 )_x * i2 ( h11 p4 h3 p10 )_v
C             i2 ( h11 p4 h1 p10 )_v + = 1 * v ( h11 p4 h1 p10 )_v
C             i2 ( h11 p4 h1 p10 )_vt + = 1/2 * Sum ( h8 ) * t ( p4 h8 )_t * i3 ( h8 h11 h1 p10 )_v
C                 i3 ( h8 h11 h1 p10 )_v + = 1 * v ( h8 h11 h1 p10 )_v
C                 i3 ( h8 h11 h1 p10 )_vt + = 1 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h8 h11 p9 p10 )_v
C             i2 ( h11 p4 h1 p10 )_vt + = 1 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h11 p4 p8 p10 )_v
C         i1 ( h11 p4 h1 h2 h3 )_fx + = -1/3 * Sum ( p7 ) * x ( p4 p7 h1 h2 h3 )_x * i2 ( h11 p7 )_f
C             i2 ( h11 p7 )_f + = 1 * f ( h11 p7 )_f
C             i2 ( h11 p7 )_vt + = -1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p7 p8 )_v
C         i1 ( h11 p4 h1 h2 h3 )_vx + = 1/3 * P( 3 ) * Sum ( h10 p7 ) * x ( p4 p7 h1 h2 h10 )_x * i2 ( h10 h11 h3 p7 )_v
C             i2 ( h10 h11 h1 p7 )_v + = 1 * v ( h10 h11 h1 p7 )_v
C             i2 ( h10 h11 h1 p7 )_vt + = -1 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h10 h11 p7 p8 )_v
C         i1 ( h11 p4 h1 h2 h3 )_vx + = 1/6 * Sum ( p8 p9 ) * x ( p8 p9 h1 h2 h3 )_x * v ( h11 p4 p8 p9 )_v
C         i1 ( h11 p4 h1 h2 h3 )_vx + = -1/6 * Sum ( h8 p9 p10 ) * x ( p4 p9 p10 h1 h2 h3 h8 )_x * v ( h8 h11 p9 p10 )_v
C         i1 ( h11 p4 h1 h2 h3 )_vxt + = 1/12 * Sum ( h8 ) * t ( p4 h8 )_t * i2 ( h8 h11 h1 h2 h3 )_vx
C             i2 ( h8 h11 h1 h2 h3 )_vx + = 1 * Sum ( p9 p10 ) * x ( p9 p10 h1 h2 h3 )_x * v ( h8 h11 p9 p10 )_v
C         i1 ( h11 p4 h1 h2 h3 )_vxt + = 1/3 * P( 3 ) * Sum ( p12 ) * t ( p4 p12 h1 h2 )_t * i2 ( h11 h3 p12 )_vx
C             i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 h11 h1 p12 )_v
C             i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 p10 ) * x ( p10 h1 h9 )_x * v ( h9 h11 p10 p12 )_v
C             i2 ( h11 h1 p12 )_vxt + = -1 * Sum ( p8 ) * t ( p8 h1 )_t * i3 ( h11 p8 p12 )_vx
C                 i3 ( h11 p8 p12 )_vx + = -1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p8 p12 )_v
C         i1 ( h11 p4 h1 h2 h3 )_vxt + = -1/6 * Sum ( p7 p8 ) * t ( p4 p7 p8 h1 h2 h3 )_t * i2 ( h11 p7 p8 )_vx
C             i2 ( h11 p7 p8 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p7 p8 )_v
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1 * P( 3 ) * Sum ( h11 ) * t ( p4 p5 h1 h11 )_t * i1 ( h11 h2 h3 )_vx
C         i1 ( h11 h1 h2 )_vx + = 1 * Sum ( h8 ) * x ( h8 )_x * v ( h8 h11 h1 h2 )_v
C         i1 ( h11 h1 h2 )_fx + = 1 * Sum ( p7 ) * x ( p7 h1 h2 )_x * i2 ( h11 p7 )_f
C             i2 ( h11 p7 )_f + = 1 * f ( h11 p7 )_f
C             i2 ( h11 p7 )_vt + = -1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p7 p8 )_v
C         i1 ( h11 h1 h2 )_vx + = -1 * P( 2 ) * Sum ( h8 p9 ) * x ( p9 h1 h8 )_x * v ( h8 h11 h2 p9 )_v
C         i1 ( h11 h1 h2 )_vx + = 1/2 * Sum ( h8 p9 p10 ) * x ( p9 p10 h1 h2 h8 )_x * v ( h8 h11 p9 p10 )_v
C         i1 ( h11 h1 h2 )_vxt + = -1 * P( 2 ) * Sum ( p12 ) * t ( p12 h1 )_t * i2 ( h11 h2 p12 )_vx
C             i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 h11 h1 p12 )_v
C             i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 p10 ) * x ( p10 h1 h9 )_x * v ( h9 h11 p10 p12 )_v
C             i2 ( h11 h1 p12 )_vxt + = 1/2 * Sum ( p8 ) * t ( p8 h1 )_t * i3 ( h11 p8 p12 )_vx
C                 i3 ( h11 p8 p12 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p8 p12 )_v
C         i1 ( h11 h1 h2 )_vxt + = 1/2 * Sum ( p8 p9 ) * t ( p8 p9 h1 h2 )_t * i2 ( h11 p8 p9 )_vx
C             i2 ( h11 p8 p9 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p8 p9 )_v
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1 * P( 6 ) * Sum ( p7 ) * t ( p4 p7 h1 h2 )_t * i1 ( p5 h3 p7 )_vx
C         i1 ( p4 h1 p7 )_vx + = 1 * Sum ( h8 ) * x ( h8 )_x * v ( h8 p4 h1 p7 )_v
C         i1 ( p4 h1 p7 )_vx + = 1/2 * Sum ( h8 h9 ) * x ( p4 h8 h9 )_x * v ( h8 h9 h1 p7 )_v
C         i1 ( p4 h1 p7 )_vx + = -1 * Sum ( h8 p9 ) * x ( p9 h1 h8 )_x * v ( h8 p4 p7 p9 )_v
C         i1 ( p4 h1 p7 )_vx + = 1/2 * Sum ( h8 h9 p10 ) * x ( p4 p10 h1 h8 h9 )_x * v ( h8 h9 p7 p10 )_v
C         i1 ( p4 h1 p7 )_vxt + = 1 * Sum ( p8 ) * t ( p8 h1 )_t * i2 ( p4 p7 p8 )_vx
C             i2 ( p4 p7 p8 )_vx + = -1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 p4 p7 p8 )_v
C             i2 ( p4 p7 p8 )_vx + = -1/2 * Sum ( h9 h10 ) * x ( p4 h9 h10 )_x * v ( h9 h10 p7 p8 )_v
C         i1 ( p4 h1 p7 )_vxt + = 1 * Sum ( h9 p8 ) * t ( p4 p8 h1 h9 )_t * i2 ( h9 p7 p8 )_vx
C             i2 ( h9 p7 p8 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h9 h10 p7 p8 )_v
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = 1/4 * Sum ( h7 h8 ) * t ( p4 p5 h7 h8 )_t * i1 ( h7 h8 h1 h2 h3 )_vx
C         i1 ( h7 h8 h1 h2 h3 )_vx + = 1 * Sum ( p9 p10 ) * x ( p9 p10 h1 h2 h3 )_x * v ( h7 h8 p9 p10 )_v
C     i0 ( p4 p5 h1 h2 h3 )_fxt + = -1 * Sum ( p12 ) * t ( p4 p5 p12 h1 h2 h3 )_t * i1 ( p12 )_fx
C         i1 ( p12 )_fx + = 1 * Sum ( h11 ) * x ( h11 )_x * i2 ( h11 p12 )_f
C             i2 ( h11 p12 )_f + = 1 * f ( h11 p12 )_f
C             i2 ( h11 p12 )_vt + = 1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p8 p12 )_v
C         i1 ( p12 )_vx + = 1/2 * Sum ( h8 h9 p10 ) * x ( p10 h8 h9 )_x * v ( h8 h9 p10 p12 )_v
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1 * P( 3 ) * Sum ( h8 p7 ) * t ( p4 p5 p7 h1 h2 h8 )_t * i1 ( h8 h3 p7 )_vx
C         i1 ( h8 h1 p7 )_vx + = -1 * Sum ( h9 ) * x ( h9 )_x * v ( h8 h9 h1 p7 )_v
C         i1 ( h8 h1 p7 )_vx + = 1 * Sum ( h9 p10 ) * x ( p10 h1 h9 )_x * v ( h8 h9 p7 p10 )_v
C         i1 ( h8 h1 p7 )_vxt + = 1 * Sum ( p9 ) * t ( p9 h1 )_t * i2 ( h8 p7 p9 )_vx
C             i2 ( h8 p7 p9 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h8 h10 p7 p9 )_v
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = 1/2 * P( 2 ) * Sum ( p7 p8 ) * t ( p4 p7 p8 h1 h2 h3 )_t * i1 ( p5 p7 p8 )_vx
C         i1 ( p4 p7 p8 )_vx + = 1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 p4 p7 p8 )_v
C         i1 ( p4 p7 p8 )_vx + = 1/2 * Sum ( h9 h10 ) * x ( p4 h9 h10 )_x * v ( h9 h10 p7 p8 )_v
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1/2 * Sum ( h9 p7 p8 ) * t ( p4 p5 p7 p8 h1 h2 h3 h9 )_t * i1 ( h9 p7 p8 )_vx
C         i1 ( h9 p7 p8 )_vx + = -1 * Sum ( h10 ) * x ( h10 )_x * v ( h9 h10 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "util.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_i0
      INTEGER k_i0_offset
      INTEGER d_x2
      INTEGER k_x2_offset
      INTEGER d_i1
      INTEGER k_i1_offset
      INTEGER d_x3
      INTEGER k_x3_offset
      INTEGER d_v2
      INTEGER k_v2_offset
      INTEGER d_x4
      INTEGER k_x4_offset
      INTEGER d_t1
      INTEGER k_t1_offset
      INTEGER d_t2
      INTEGER k_t2_offset
      INTEGER d_t3
      INTEGER k_t3_offset
      INTEGER d_t4
      INTEGER k_t4_offset
      INTEGER l_i1_offset
      INTEGER d_i2
      INTEGER k_i2_offset
      INTEGER l_i2_offset
      INTEGER d_i3
      INTEGER k_i3_offset
      INTEGER l_i3_offset
      INTEGER d_f1
      INTEGER k_f1_offset
      INTEGER d_x1
      INTEGER k_x1_offset
      DOUBLE PRECISION size_i1
      DOUBLE PRECISION size_i2
      DOUBLE PRECISION size_i3
      CHARACTER*255 filename
      CALL OFFSET_ipeomccsdtq_x3_1_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_1_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_1_1(d_v2,k_v2_offset,d_i1,k_i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_1_2_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_1_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_2_1(d_v2,k_v2_offset,d_i2,k_i2_offset)
      CALL OFFSET_ipeomccsdtq_x3_1_2_2_1(l_i3_offset,k_i3_offset,size_i3
     &)
      CALL TCE_FILENAME('ipeomccsdtq_x3_1_2_2_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL ipeomccsdtq_x3_1_2_2_1(d_v2,k_v2_offset,d_i3,k_i3_offset)
      CALL ipeomccsdtq_x3_1_2_2_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i3
     &,k_i3_offset)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ipeomccsdtq_x3_1_2_2(d_t1,k_t1_offset,d_i3,k_i3_offset,d_i2,k
     &_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_1_2_3(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_2(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_1_3_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_1_3_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_3_1(d_v2,k_v2_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_1_3_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_3(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_1_4_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_1_4_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_4_1(d_f1,k_f1_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_1_4_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_4(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_1_5_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_1_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_5_1(d_v2,k_v2_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_1_5_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_1_5(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_1_6(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL ipeomccsdtq_x3_1_7(d_t3,k_t3_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_1(d_x2,k_x2_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_2_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_2_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_2_1(d_v2,k_v2_offset,d_i1,k_i1_offset)
      CALL ipeomccsdtq_x3_2_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL OFFSET_ipeomccsdtq_x3_2_3_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_2_3_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_2_3_1(d_v2,k_v2_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_2_3_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_2_3(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_2_4(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL ipeomccsdtq_x3_2_5(d_t3,k_t3_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL OFFSET_ipeomccsdtq_x3_2_6_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_2_6_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_2_6_1(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_2_6(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_2(d_x2,k_x2_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_3_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_3_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_3_1(d_f1,k_f1_offset,d_i1,k_i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_3_2_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_3_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_3_2_1(d_f1,k_f1_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_3_2_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_3_2(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_3_3(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL ipeomccsdtq_x3_3_4(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_3(d_x3,k_x3_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_4_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_4_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_4_1(d_f1,k_f1_offset,d_i1,k_i1_offset)
      CALL ipeomccsdtq_x3_4_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL ipeomccsdtq_x3_4_3(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_4(d_x3,k_x3_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_5_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_5_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_5_1(d_v2,k_v2_offset,d_i1,k_i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_5_2_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_5_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_5_2_1(d_v2,k_v2_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_5_2_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,k
     &_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_5_2(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_i
     &1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_5_3(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_5(d_x3,k_x3_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_6_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_6_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_6_1(d_v2,k_v2_offset,d_i1,k_i1_offset)
      CALL ipeomccsdtq_x3_6_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL ipeomccsdtq_x3_6_3(d_t2,k_t2_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_6(d_x3,k_x3_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_7(d_x3,k_x3_offset,d_v2,k_v2_offset,d_i0,k_i0_
     &offset)
      CALL OFFSET_ipeomccsdtq_x3_8_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_8_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_8_1(d_f1,k_f1_offset,d_i1,k_i1_offset)
      CALL ipeomccsdtq_x3_8_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_8(d_x4,k_x4_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_9_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_9_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_9_1(d_v2,k_v2_offset,d_i1,k_i1_offset)
      CALL ipeomccsdtq_x3_9_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i1,k_i
     &1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_9(d_x4,k_x4_offset,d_i1,k_i1_offset,d_i0,k_i0_
     &offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_10(d_x4,k_x4_offset,d_v2,k_v2_offset,d_i0,k_i0
     &_offset)
      CALL OFFSET_ipeomccsdtq_x3_11_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL OFFSET_ipeomccsdtq_x3_11_1_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_1_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_1_1(d_v2,k_v2_offset,d_i2,k_i2_offset)
      CALL OFFSET_ipeomccsdtq_x3_11_1_2_1(l_i3_offset,k_i3_offset,size_i
     &3)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_1_2_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL ipeomccsdtq_x3_11_1_2_1(d_v2,k_v2_offset,d_i3,k_i3_offset)
      CALL ipeomccsdtq_x3_11_1_2_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i
     &3,k_i3_offset)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ipeomccsdtq_x3_11_1_2(d_t1,k_t1_offset,d_i3,k_i3_offset,d_i2,
     &k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_11_1_3(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_1(d_x2,k_x2_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_11_2_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_2_1(d_f1,k_f1_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_11_2_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_2(d_x3,k_x3_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_11_3_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_3_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_3_1(d_v2,k_v2_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_11_3_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_3(d_x3,k_x3_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_11_4(d_x3,k_x3_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL ipeomccsdtq_x3_11_5(d_x4,k_x4_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_11_6_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_6_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_6_1(d_x3,k_x3_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_6(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_11_7_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_7_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_7_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL ipeomccsdtq_x3_11_7_2(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL OFFSET_ipeomccsdtq_x3_11_7_3_1(l_i3_offset,k_i3_offset,size_i
     &3)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_7_3_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL ipeomccsdtq_x3_11_7_3_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i
     &3,k_i3_offset)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ipeomccsdtq_x3_11_7_3(d_t1,k_t1_offset,d_i3,k_i3_offset,d_i2,
     &k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_7(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_11_8_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_11_8_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_8_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_11_8(d_t3,k_t3_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_11(d_t1,k_t1_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_12_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_12_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_12_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_12_2_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_12_2_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_12_2_1(d_f1,k_f1_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_12_2_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_12_2(d_x2,k_x2_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_12_3(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL ipeomccsdtq_x3_12_4(d_x3,k_x3_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_12_5_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_12_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_12_5_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL ipeomccsdtq_x3_12_5_2(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL OFFSET_ipeomccsdtq_x3_12_5_3_1(l_i3_offset,k_i3_offset,size_i
     &3)
      CALL TCE_FILENAME('ipeomccsdtq_x3_12_5_3_1_i3',filename)
      CALL CREATEFILE(filename,d_i3,size_i3)
      CALL ipeomccsdtq_x3_12_5_3_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i
     &3,k_i3_offset)
      CALL RECONCILEFILE(d_i3,size_i3)
      CALL ipeomccsdtq_x3_12_5_3(d_t1,k_t1_offset,d_i3,k_i3_offset,d_i2,
     &k_i2_offset)
      CALL DELETEFILE(d_i3)
      IF (.not.MA_POP_STACK(l_i3_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_12_5(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_12_6_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_12_6_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_12_6_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_12_6(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_12(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_13_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_13_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_13_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL ipeomccsdtq_x3_13_2(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL ipeomccsdtq_x3_13_3(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL ipeomccsdtq_x3_13_4(d_x3,k_x3_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_13_5_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_13_5_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_13_5_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL ipeomccsdtq_x3_13_5_2(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_13_5(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_13_6_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_13_6_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_13_6_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_13_6(d_t2,k_t2_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_13(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_14_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_14_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_14_1(d_x3,k_x3_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_14(d_t2,k_t2_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_15_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_15_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL OFFSET_ipeomccsdtq_x3_15_1_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_15_1_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_15_1_1(d_f1,k_f1_offset,d_i2,k_i2_offset)
      CALL ipeomccsdtq_x3_15_1_2(d_t1,k_t1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_15_1(d_x1,k_x1_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL ipeomccsdtq_x3_15_2(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_15(d_t3,k_t3_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_16_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_16_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_16_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL ipeomccsdtq_x3_16_2(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL OFFSET_ipeomccsdtq_x3_16_3_1(l_i2_offset,k_i2_offset,size_i2)
      CALL TCE_FILENAME('ipeomccsdtq_x3_16_3_1_i2',filename)
      CALL CREATEFILE(filename,d_i2,size_i2)
      CALL ipeomccsdtq_x3_16_3_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i2,
     &k_i2_offset)
      CALL RECONCILEFILE(d_i2,size_i2)
      CALL ipeomccsdtq_x3_16_3(d_t1,k_t1_offset,d_i2,k_i2_offset,d_i1,k_
     &i1_offset)
      CALL DELETEFILE(d_i2)
      IF (.not.MA_POP_STACK(l_i2_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_16(d_t3,k_t3_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_17_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_17_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_17_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL ipeomccsdtq_x3_17_2(d_x2,k_x2_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_17(d_t3,k_t3_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      CALL OFFSET_ipeomccsdtq_x3_18_1(l_i1_offset,k_i1_offset,size_i1)
      CALL TCE_FILENAME('ipeomccsdtq_x3_18_1_i1',filename)
      CALL CREATEFILE(filename,d_i1,size_i1)
      CALL ipeomccsdtq_x3_18_1(d_x1,k_x1_offset,d_v2,k_v2_offset,d_i1,k_
     &i1_offset)
      CALL RECONCILEFILE(d_i1,size_i1)
      CALL ipeomccsdtq_x3_18(d_t4,k_t4_offset,d_i1,k_i1_offset,d_i0,k_i0
     &_offset)
      CALL DELETEFILE(d_i1)
      IF (.not.MA_POP_STACK(l_i1_offset)) CALL ERRQUIT('ipeomccsdtq_x3',
     &-1,MA_ERR)
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1 * P( 6 ) * Sum ( h11 ) * x ( p4 h1 h11 )_x * i1 ( h11 p5 h2 h3 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h11b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER p5b_2
      INTEGER h11b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p5b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = 1,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_v)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h11b = 1,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(p4b,dummy_p6b,h1b,h11b,p4b_1,dummy_p6b_1,h1b
     &_1,h11b_1)
      CALL TCE_RESTRICTED_4(p5b,h11b,h2b,h3b,p5b_2,h11b_2,h2b_2,h3b_2)
      dim_common = int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+h2b-1) * int_mb
     &(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1',2,MA_ERR)
      IF ((h11b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h11b_1 - 1 + noab * (p4b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),3,1,2,-1.0d0,.false.
     &)
      END IF
      IF ((h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),2,1,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (h11b_2 - 1 + noab * (p5b_2 - no
     &ab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),4,3,1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1',6,MA_E
     &RR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1',9,MA_ERR)
      IF ((p4b .le. p5b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,3,4,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p4b .le. p5b) .and. (h2b .le. h1b) .and. (h1b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,3,2,4,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h1b - 1 + noab * (h2b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p4b .le. p5b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,3,2,1,4,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h1b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),3,5,4,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h2b .le. h1b) .and. (h1b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),3,5,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h1b - 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),3,5,2,1,4,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( h11 p4 h1 h2 )_v + = 1 * v ( h11 p4 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER p4b_1
      INTEGER h11b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      CALL TCE_RESTRICTED_4(p4b,h11b,h1b,h2b,p4b_1,h11b_1,h1b_1,h2b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_1',1,MA_ERR)
      IF ((h11b .le. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (p4b_1 - 1 + (noab
     &+nvab) * (h11b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_1_1(l_a_offset,k_a_offset,size)
C     i1 ( h11 p4 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_1_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h2b - 1 + noab * (h1b - 1 + noab 
     &* (h11b - 1 + noab * (p4b - noab - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range
     &+h2b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 p4 h1 h2 )_vt + = 1 * Sum ( h12 ) * t ( p4 h12 )_t * i2 ( h11 h12 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h12b
      INTEGER p4b_1
      INTEGER h12b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h12b = 1,noab
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+h12b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p4b,h12b,p4b_1,h12b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h1b,h2b,h11b_2,h12b_2,h1b_2,h2b_2)
      dim_common = int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (p4b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h12b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2',5,MA_ERR)
      IF ((h12b .lt. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h2b_2
     & - 1 + noab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h12b_2 - 1
     &)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((h11b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h2b_2
     & - 1 + noab * (h1b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1
     &)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 h12 h1 h2 )_v + = -1 * v ( h11 h12 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h1b,h2b,h11b_1,h12b_1,h1b_1,h2b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h12b_1 - 1 + (noa
     &b+nvab) * (h11b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_1',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h11b-
     &1),4,3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_1',4,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_1_2_1(l_a_offset,k_a_offset,size)
C     i2 ( h11 h12 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h2b - 1 + noab * (h1b - 1 + noab 
     &* (h12b - 1 + noab * (h11b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+h12b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_rang
     &e+h2b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_2_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h11 h12 h1 h2 )_vt + = 1 * P( 2 ) * Sum ( p8 ) * t ( p8 h1 )_t * i3 ( h11 h12 h2 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h2b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h2b,p8b,h11b_2,h12b_2,h2b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11
     &b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h2b-1),int_mb(k_range+p8b-
     &1),3,2,1,4,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),3,2,1,4,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_2_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i3 ( h11 h12 h1 p8 )_v + = 1 * v ( h11 h12 h1 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p8b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h1b_1
      INTEGER p8b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p8b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p8b-1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h1b,p8b,h11b_1,h12b_1,h1b_1,p8b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p8b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2_1',1,MA_ERR)
      IF ((h1b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p8b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h12b_1 - 1 + (noa
     &b+nvab) * (h11b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+p8b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_1',
     &2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h11b-
     &1),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_1',
     &4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &2_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_1_2_2_1(l_a_offset,k_a_offset,siz
     &e)
C     i3 ( h11 h12 h1 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p8b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p8b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p8b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p8b - noab - 1 + nvab * (h1b - 1 
     &+ noab * (h12b - 1 + noab * (h11b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+h12b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_rang
     &e+p8b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_2_2_2(d_a,k_a_offset,d_b,k_b_offset,d_
     &c,k_c_offset)
C     i3 ( h11 h12 h1 p8 )_vt + = -1/2 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h11 h12 p8 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p8b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p9b,h1b,p9b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,p8b,p9b,h11b_2,h12b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p9b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_2',
     &3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2_2',5,MA_ERR)
      IF ((p9b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p9b-1),int_mb(k_range+p8b-
     &1),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((p8b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),3,2,1,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_2',
     &6,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &2_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &2_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_2_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_2_2',
     &10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &2_2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_2_3(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h11 h12 h1 h2 )_vt + = -1/2 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * v ( h11 h12 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h2b,p7b_1,p8b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,p7b,p8b,h11b_2,h12b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_3',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_2_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-
     &1),2,1,4,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_3',6,
     &MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_2_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_3',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_2_
     &3',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 p4 h1 h2 )_vt + = -1 * P( 2 ) * Sum ( p7 ) * t ( p7 h1 )_t * i2 ( h11 p4 h2 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER h11b_2
      INTEGER h2b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h1b,p7b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p4b,h11b,h2b,p7b,p4b_2,h11b_2,h2b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_3',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h2b_2 - 1 + noab * (h11b_2 - 1 + noab * (p4b
     &_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_3',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_3'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_3'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),3,2,1,4,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_3',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_3'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_3_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 p4 h1 p7 )_v + = 1 * v ( h11 p4 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER p4b_1
      INTEGER h11b_1
      INTEGER h1b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_4(p4b,h11b,h1b,p7b,p4b_1,h11b_1,h1b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_3_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3_1',1,MA_ERR)
      IF ((h11b .le. p4b) .and. (h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p7b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (p4b_1 - 1 + (noab
     &+nvab) * (h11b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_1',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_1',4,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_
     &1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_1_3_1(l_a_offset,k_a_offset,size)
C     i2 ( h11 p4 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h1b - 1 
     &+ noab * (h11b - 1 + noab * (p4b - noab - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range
     &+p7b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_3_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h11 p4 h1 p7 )_vt + = -1/2 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h11 p4 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER h11b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_3_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p4b,h11b,p7b,p8b,p4b_2,h11b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_3_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_3_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3_2',5,MA_ERR)
      IF ((h11b .le. p4b) .and. (p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1
     &),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h11b .le. p4b) .and. (p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_2',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_3_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_3_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 p4 h1 h2 )_ft + = -1 * Sum ( p10 ) * t ( p4 p10 h1 h2 )_t * i2 ( h11 p10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p4b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h11b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_f,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_4',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p10b,h1b,h2b,p4b_1,p10b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_2(h11b,p10b,h11b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4',2,MA_ERR)
      IF ((p10b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p10b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_4',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h11b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p10b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_4',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_4'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_4'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),4,1,3,2,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_4',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_4'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_4_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 p10 )_f + = 1 * f ( h11 p10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p10b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER p10b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p10b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p10b-1)) .eq. irrep_f) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p10b-1)
      CALL TCE_RESTRICTED_2(h11b,p10b,h11b_1,p10b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p10b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_4_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p10b_
     &1 - 1 + (noab+nvab) * (h11b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p10b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_1',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h11b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_1',4,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_
     &1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_1_4_1(l_a_offset,k_a_offset,size)
C     i2 ( h11 p10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER p10b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p10b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p10b
     &-1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p10b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p10b
     &-1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p10b - noab - 1 + nvab * (h11b - 
     &1))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+p10b-1))
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_4_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h11 p10 )_vt + = 1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p8 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p10b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p10b-1)) .eq. ieor(irre
     &p_v,irrep_t)) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_4_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h9b,p8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,p10b,p8b,h11b_2,h9b_2,p10b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4_2',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-
     &1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h9b .le. h11b) .and. (p10b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-
     &1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-
     &1),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p10b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-
     &1),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_2',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_4_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h11b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_4_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 p4 h1 h2 )_vt + = 1 * P( 2 ) * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * i2 ( h8 h11 h2 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER h2b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_5',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p7b,h1b,h8b,p4b_1,p7b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h11b,h8b,h2b,p7b,h11b_2,h8b_2,h2b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5',2,MA_ERR)
      IF ((p7b .lt. p4b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,2,4,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,1,4,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_5',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5',5,MA_ERR)
      IF ((h8b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h2b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h2b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-1
     &),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_5',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_5'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_5'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),4,2,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),4,2,1,3,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_5',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_5'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_5_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h8 h11 h1 p7 )_v + = 1 * v ( h8 h11 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER h8b_1
      INTEGER h11b_1
      INTEGER h1b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_4(h8b,h11b,h1b,p7b,h8b_1,h11b_1,h1b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_5_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5_1',1,MA_ERR)
      IF ((h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p7b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h11b_1 - 1 + (noa
     &b+nvab) * (h8b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1
     &),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_1',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h8b - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_1',4,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_
     &1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_1_5_1(l_a_offset,k_a_offset,size)
C     i2 ( h8 h11 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h1b - 1 
     &+ noab * (h11b - 1 + noab * (h8b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h8b-1)) * dfloat(int_mb(k_rang
     &e+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range
     &+p7b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_5_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h8 h11 h1 p7 )_vt + = -1 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h8 h11 p7 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h8b_2
      INTEGER h11b_2
      INTEGER p7b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_5_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p9b,h1b,p9b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h8b,h11b,p7b,p9b,h8b_2,h11b_2,p7b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_5_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p9b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_5_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5_2',5,MA_ERR)
      IF ((p9b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p9b-1),int_mb(k_range+p7b-1
     &),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((p7b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p7b-1),int_mb(k_range+p9b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_2',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_5_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h8b - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_5_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 p4 h1 h2 )_vt + = 1/2 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * v ( h11 p4 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p4b_2
      INTEGER h11b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_6',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h2b,p7b_1,p8b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p4b,h11b,p7b,p8b,p4b_2,h11b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_6',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_6',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_6',5,MA_ERR)
      IF ((h11b .le. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),1,2,4,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_6',6,MA
     &_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_6'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_6'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_6',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),2,1,4,3,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_6',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_6'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_1_7(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 p4 h1 h2 )_vt + = 1/2 * Sum ( h9 p7 p8 ) * t ( p4 p7 p8 h1 h2 h9 )_t * v ( h9 h11 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_7',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p7b-1)+int_mb(k_active+
     &p8b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h9b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p4b,p7b,p8b,h1b,h2b,h9b,p4b_1,p7b_1,p8b_1,h1
     &b_1,h2b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,p7b,p8b,h11b_2,h9b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_7',2,MA_ERR)
      IF ((p8b .lt. p4b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,3,4,2,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p8b .lt. p4b) .and. (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),6,4,3,5,2,1,-1.0d0,.f
     &alse.)
      END IF
      IF ((p8b .lt. p4b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),5,4,3,6,2,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,2,4,3,1,-1.0d0,.f
     &alse.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b) .and. (h1b .le. h9b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),6,4,2,5,3,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),5,4,2,6,3,1,-1.0d0,.f
     &alse.)
      END IF
      IF ((p4b .le. p7b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,1,4,3,2,1.0d0,.fa
     &lse.)
      END IF
      IF ((p4b .le. p7b) .and. (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h2b-1),6,4,1,5,3,2,-1.0d0,.f
     &alse.)
      END IF
      IF ((p4b .le. p7b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h9b-1),5,4,1,6,3,2,1.0d0,.fa
     &lse.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_1_7',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_1_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_7',5,MA_ERR)
      IF ((h9b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),2,1,4,3,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),1,2,4,3,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_1_7',6,MA
     &_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_7'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_7'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_1_7',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),4,1,3,2,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_1_7',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_1_7'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1 * P( 3 ) * Sum ( p11 ) * x ( p11 h1 h2 )_x * i1 ( p4 p5 h3 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER dummy_p6b_1
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p4b_2
      INTEGER p5b_2
      INTEGER h3b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_v)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p11b,h1b,h2b,dummy_p6b_1,p11b_1,h1
     &b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p4b,p5b,h3b,p11b,p4b_2,p5b_2,h3b_2,p11b_2)
      dim_common = int_mb(k_range+p11b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p11b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (p5b_2 - noab - 1 + nvab
     & * (p4b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h3b-1),int_mb(k_range+p11b-1
     &),3,2,1,4,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2',6,MA_E
     &RR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2',9,MA_ERR)
      IF ((h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),3,2,5,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),3,2,1,5,4,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),3,2,5,1,4,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( p4 p5 h1 p11 )_v + = 1 * v ( p4 p5 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      CALL TCE_RESTRICTED_4(p4b,p5b,h1b,p11b,p4b_1,p5b_1,h1b_1,p11b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_1',1,MA_ERR)
      IF ((h1b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p11b_
     &1 - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (p5b_1 - 1 + (noa
     &b+nvab) * (p4b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+p11b-1
     &),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p5b - noab - 1 + nvab * (p4
     &b - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_2_1(l_a_offset,k_a_offset,size)
C     i1 ( p4 p5 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER p11b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p11b - noab - 1 + nvab * (h1b - 1
     & + noab * (p5b - noab - 1 + nvab * (p4b - noab - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+p5b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range+
     &p11b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( p4 p5 h1 p11 )_vt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * v ( p4 p5 p7 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER p5b_2
      INTEGER p11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h1b,p7b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p4b,p5b,p11b,p7b,p4b_2,p5b_2,p11b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_2',5,MA_ERR)
      IF ((p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p5b_2 - 1 + (noa
     &b+nvab) * (p4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (p5b_2 - 1 + (noa
     &b+nvab) * (p4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p5b - noab - 1 + nvab * (p4
     &b - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( p4 p5 h1 p11 )_vt + = 1/2 * Sum ( h7 h8 ) * t ( p4 p5 h7 h8 )_t * i2 ( h7 h8 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &7b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h7b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p5b,h7b,h8b,p4b_1,p5b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h7b,h8b,h1b,p11b,h7b_2,h8b_2,h1b_2,p11b_2)
      dim_common = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1) * int_mb(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,2,1,4,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_3',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h7b
     &_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+p11b-1
     &),4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2_3',6,MA
     &_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_3'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_3'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p5b - noab - 1 + nvab * (p4
     &b - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_3',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_3'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_3_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h7 h8 h1 p11 )_v + = 1 * v ( h7 h8 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER h1b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      CALL TCE_RESTRICTED_4(h7b,h8b,h1b,p11b,h7b_1,h8b_1,h1b_1,p11b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_3_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3_1',1,MA_ERR)
      IF ((h1b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p11b_
     &1 - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h8b_1 - 1 + (noa
     &b+nvab) * (h7b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+p11b-1
     &),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_1',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),int_mb(k_range+h7b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h8b - 1 + noab * (h7b - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_1',4,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_
     &1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_2_3_1(l_a_offset,k_a_offset,size)
C     i2 ( h7 h8 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p11b
      DOUBLE PRECISION size
      length = 0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p11b - noab - 1 + nvab * (h1b - 1
     & + noab * (h8b - 1 + noab * (h7b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h7b-1)) * dfloat(int_mb(k_rang
     &e+h8b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range+
     &p11b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_3_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h7 h8 h1 p11 )_vt + = 1 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h7 h8 p9 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p11b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_3_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p9b,h1b,p9b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h7b,h8b,p11b,p9b,h7b_2,h8b_2,p11b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1) * int_mb
     &(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_3_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p9b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_3_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3_2',5,MA_ERR)
      IF ((p9b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p11b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p11b-1),int_mb(k_range+p9b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_2',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_3_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h7b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h8b - 1 + noab * (h7b - 1))
     &)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_3_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( p4 p5 h1 p11 )_vt + = 1 * P( 2 ) * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * v ( h8 p5 p7 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER p5b_2
      INTEGER h8b_2
      INTEGER p11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_4',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p7b,h1b,h8b,p4b_1,p7b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_4(p5b,h8b,p11b,p7b,p5b_2,h8b_2,p11b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_4',2,MA_ERR)
      IF ((p7b .lt. p4b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,2,4,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,1,4,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_4',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_4',5,MA_ERR)
      IF ((h8b .le. p5b) .and. (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p5b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h8b .le. p5b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (p5b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2_4',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_4'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_4'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_4',9,MA_ERR)
      IF ((p4b .le. p5b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),4,2,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p5b - noab - 1 + nvab * (p4
     &b - noab - 1)))))
      END IF
      IF ((p5b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),2,4,3,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p5
     &b - noab - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_4',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_4'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( p4 p5 h1 p11 )_vt + = 1/2 * Sum ( h8 h9 p7 ) * t ( p4 p5 p7 h1 h8 h9 )_t * v ( h8 h9 p7 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_5',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &p7b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h8b-1)+int_mb(k_active+
     &h9b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h9b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h8b-1),int
     &_mb(k_sym+h9b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p4b,p5b,p7b,h1b,h8b,h9b,p4b_1,p5b_1,p7b_1,h1
     &b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h8b,h9b,p11b,p7b,h8b_2,h9b_2,p11b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_5',2,MA_ERR)
      IF ((p7b .lt. p4b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,3,2,5,4,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p7b .lt. p4b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,3,2,6,4,1,-1.0d0,.f
     &alse.)
      END IF
      IF ((p7b .lt. p4b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,3,2,6,5,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,3,1,5,4,2,-1.0d0,.f
     &alse.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (h8b .lt. h1b) .and.
     & (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,3,1,6,4,2,1.0d0,.fa
     &lse.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,3,1,6,5,2,-1.0d0,.f
     &alse.)
      END IF
      IF ((p5b .le. p7b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),6,2,1,5,4,3,1.0d0,.fa
     &lse.)
      END IF
      IF ((p5b .le. p7b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),5,2,1,6,4,3,-1.0d0,.f
     &alse.)
      END IF
      IF ((p5b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),4,2,1,6,5,3,1.0d0,.fa
     &lse.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_5',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_5',5,MA_ERR)
      IF ((p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2_5',6,MA
     &_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_5'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_5'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_5',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p5b - noab - 1 + nvab * (p4
     &b - noab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_5',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_5'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( p4 p5 h1 p11 )_vtt + = 1 * P( 2 ) * Sum ( h9 ) * t ( p4 h9 )_t * i2 ( h9 p5 h1 p11 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER p4b_1
      INTEGER h9b_1
      INTEGER p5b_2
      INTEGER h9b_2
      INTEGER h1b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,ieor(irrep_
     &t,irrep_t))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_6',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p4b,h9b,p4b_1,h9b_1)
      CALL TCE_RESTRICTED_4(p5b,h9b,h1b,p11b,p5b_2,h9b_2,h1b_2,p11b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_6',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p4b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_6',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_6',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (h1b_2 - 1 + noab * (h9b_2 - 1 + noab * (p5b
     &_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+p11b-1
     &),4,3,1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2_6',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_6'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_6'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_6',9,MA_ERR)
      IF ((p4b .le. p5b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p5b - noab - 1 + nvab * (p4
     &b - noab - 1)))))
      END IF
      IF ((p5b .le. p4b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1),int_mb(k_range+p4b-1
     &),3,4,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1 + nvab * (p5
     &b - noab - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_6',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_6'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_2_6_1(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h9 p4 h1 p11 )_vt + = 1 * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * v ( h8 h9 p7 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h9b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_2
      INTEGER h8b_2
      INTEGER p11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_6_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p7b,h1b,h8b,p4b_1,p7b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h9b,h8b,p11b,p7b,h9b_2,h8b_2,p11b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_6_1',2,MA_ERR)
      IF ((p7b .lt. p4b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,2,4,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,1,4,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_2_6_1',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_2_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_6_1',5,MA_ERR)
      IF ((h8b .le. h9b) .and. (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h8b .le. h9b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h9b .lt. h8b) .and. (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b-1
     &),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h9b .lt. h8b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b-1
     &),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_2_6_1',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_6_
     &1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_6_
     &1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_2_6_1',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),4,2,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h9b - 1 + noab * (p4b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_2_6_1',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_2_6_
     &1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_2_6_1(l_a_offset,k_a_offset,size)
C     i2 ( h9 p4 h1 p11 )_vt
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER h9b
      INTEGER h1b
      INTEGER p11b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_2_6_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p11b - noab - 1 + nvab * (h1b - 1
     & + noab * (h9b - 1 + noab * (p4b - noab - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+h9b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range+
     &p11b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xf + = -1 * P( 3 ) * Sum ( h10 ) * x ( p4 p5 h1 h2 h10 )_x * i1 ( h10 h3 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER dummy_p6b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h10b_1
      INTEGER h10b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_f)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h10b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h10b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(p4b,p5b,dummy_p6b,h1b,h2b,h10b,p4b_1,p5b_1,d
     &ummy_p6b_1,h1b_1,h2b_1,h10b_1)
      CALL TCE_RESTRICTED_2(h10b,h3b,h10b_2,h3b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b
     &-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3',2,MA_ERR)
      IF ((h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (p5b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),5,4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h1b .le. h10b) .and. (h10b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),5,3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),4,3,2,1,5,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_3',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h10b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h3b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_3',6,MA_E
     &RR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3',9,MA_ERR)
      IF ((h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,1,3,2,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,1,2,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_3',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_3_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( h10 h1 )_f + = 1 * f ( h10 h1 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h1b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h1b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h1b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h1b-1)) .eq. irrep_f) T
     &HEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1)
      CALL TCE_RESTRICTED_2(h10b,h1b,h10b_1,h1b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + (noab+nvab) * (h10b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_3_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_3_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_3_1(l_a_offset,k_a_offset,size)
C     i1 ( h10 h1 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h1b
      DOUBLE PRECISION size
      length = 0
      DO h10b = 1,noab
      DO h1b = 1,noab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h1b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_3_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h10b = 1,noab
      DO h1b = 1,noab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h1b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h1b - 1 + noab * (h10b - 1))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h10b-1)) * dfloat(int_mb(k_ran
     &ge+h1b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_3_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h10 h1 )_ft + = 1 * Sum ( p11 ) * t ( p11 h1 )_t * i2 ( h10 p11 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h10b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h1b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_f,irrep_t)) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p11b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p11b,h1b,p11b_1,h1b_1)
      CALL TCE_RESTRICTED_2(h10b,p11b,h10b_2,p11b_2)
      dim_common = int_mb(k_range+p11b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p11b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_3_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (h10b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+p11b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_3_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),1,2,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_3_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_3_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h10 p11 )_f + = 1 * f ( h10 p11 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER p11b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. irrep_f) 
     &THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      CALL TCE_RESTRICTED_2(h10b,p11b,h10b_1,p11b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p11b_
     &1 - 1 + (noab+nvab) * (h10b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+p11b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_1',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h10b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_1',4,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_
     &1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_3_2_1(l_a_offset,k_a_offset,size)
C     i2 ( h10 p11 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER p11b
      DOUBLE PRECISION size
      length = 0
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p11b - noab - 1 + nvab * (h10b - 
     &1))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h10b-1)) * dfloat(int_mb(k_ran
     &ge+p11b-1))
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_3_2_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h10 p11 )_vt + = 1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h10 p8 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h10b_2
      INTEGER h9b_2
      INTEGER p11b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. ieor(irre
     &p_v,irrep_t)) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h9b,p8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h10b,h9b,p11b,p8b,h10b_2,h9b_2,p11b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2_2',5,MA_ERR)
      IF ((h9b .le. h10b) .and. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p8b-1),int_mb(k_range+p11b-
     &1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h9b .le. h10b) .and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p8b-
     &1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h10b .lt. h9b) .and. (p8b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p11b-
     &1),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h10b .lt. h9b) .and. (p11b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p11b-1),int_mb(k_range+p8b-
     &1),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_2',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_2_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h10b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_2_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_3_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h10 h1 )_vt + = -1 * Sum ( h8 p7 ) * t ( p7 h8 )_t * v ( h8 h10 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER h10b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h1b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_v,irrep_t)) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h8b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h8b,p7b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h10b,h8b,h1b,p7b,h10b_2,h8b_2,h1b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_3_3',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_3',5,MA_ERR)
      IF ((h8b .le. h10b) .and. (h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF ((h10b .lt. h8b) .and. (h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noab
     &+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1
     &),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_3_3',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_3'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_3'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_3',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h10b-1),2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_3_3',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_3'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_3_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h10 h1 )_vt + = -1/2 * Sum ( h9 p7 p8 ) * t ( p7 p8 h1 h9 )_t * v ( h9 h10 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h1b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h10b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h1b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h1b-
     &1).ne.4)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+h1b-1)) .eq. ieor(irrep
     &_v,irrep_t)) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h1b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_4',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h9b,p7b_1,p8b_1,h1b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h10b,h9b,p7b,p8b,h10b_2,h9b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_4',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,3,4,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_3_4',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_3_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_4',5,MA_ERR)
      IF ((h9b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),2,1,4,3,1.0d0,.false.)
      END IF
      IF ((h10b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),1,2,4,3,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_3_4',6,MA
     &_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_4'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_4'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_3_4',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h10b-1
     &),int_mb(k_range+h1b-1),1,2,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_3_4',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_3_4'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xf + = 1 * P( 2 ) * Sum ( p10 ) * x ( p4 p10 h1 h2 h3 )_x * i1 ( p5 p10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER p5b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p5b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_f)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1)+int_mb(k_a
     &ctive+p10b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(p4b,dummy_p6b,p10b,h1b,h2b,h3b,p4b_1,dummy_p
     &6b_1,p10b_1,h1b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_2(p5b,p10b,p5b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b
     &-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4',2,MA_ERR)
      IF ((p10b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p10b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h3b-1),5,4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h3b-1),5,4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_4',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (p5b_2 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p10b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_4',6,MA_E
     &RR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4',9,MA_ERR)
      IF ((p4b .le. p5b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,1,4,3,2,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),1,5,4,3,2,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_4',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_4_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( p4 p10 )_f + = 1 * f ( p4 p10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p10b
      INTEGER dimc
      INTEGER p4b_1
      INTEGER p10b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p10b-
     &1).ne.4)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+p10b-1)) .eq. irrep_f) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p10b-1)
      CALL TCE_RESTRICTED_2(p4b,p10b,p4b_1,p10b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p10b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p10b_
     &1 - 1 + (noab+nvab) * (p4b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_4_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (p4b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_4_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_4_1(l_a_offset,k_a_offset,size)
C     i1 ( p4 p10 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER p10b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+p10b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p10b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_4_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+p10b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p10b-
     &1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p10b - noab - 1 + nvab * (p4b - n
     &oab - 1))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+p10b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_4_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( p4 p10 )_vt + = 1 * Sum ( h8 p7 ) * t ( p7 h8 )_t * v ( h8 p4 p7 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER p4b_2
      INTEGER h8b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p10b-
     &1).ne.4)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+p10b-1)) .eq. ieor(irrep
     &_v,irrep_t)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h8b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h8b,p7b_1,h8b_1)
      CALL TCE_RESTRICTED_4(p4b,h8b,p10b,p7b,p4b_2,h8b_2,p10b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_4_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_2',5,MA_ERR)
      IF ((h8b .le. p4b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h8b .le. p4b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_4_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (p4b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_4_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_4_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( p4 p10 )_vt + = 1/2 * Sum ( h8 h9 p7 ) * t ( p4 p7 h8 h9 )_t * v ( h8 h9 p7 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p10b-
     &1).ne.4)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+p10b-1)) .eq. ieor(irrep
     &_v,irrep_t)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h8b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p7b,h8b,h9b,p4b_1,p7b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h8b,h9b,p10b,p7b,h8b_2,h9b_2,p10b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_3',2,MA_ERR)
      IF ((p7b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,2,4,3,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1)
     &,1,4,3,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_4_3',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_4_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_3',5,MA_ERR)
      IF ((p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_4_3',6,MA
     &_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4_3'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4_3'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_4_3',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),2,1,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (p4b - noab - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_4_3',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_4_3'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * P( 3 ) * Sum ( h11 h12 ) * x ( p4 p5 h1 h11 h12 )_x * i1 ( h11 h12 h2 h3 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h11b
      INTEGER h12b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER dummy_p6b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = 1,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_v)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h11b-1)+int_mb(k_active
     &+h12b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h11b-1)+int_mb(k_sp
     &in+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h11b
     &-1),int_mb(k_sym+h12b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(p4b,p5b,dummy_p6b,h1b,h11b,h12b,p4b_1,p5b_1,
     &dummy_p6b_1,h1b_1,h11b_1,h12b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h2b,h3b,h11b_2,h12b_2,h2b_2,h3b_2)
      dim_common = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5',2,MA_ERR)
      IF ((h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h11b_1 - 1 + noab * (p5b_1 - n
     &oab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h11b-1),int_mb(k_range+h12b-
     &1),int_mb(k_range+h1b-1),5,2,1,4,3,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h1b) .and. (h1b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (h11b_1 - 1 + noab * (p5b_1 - n
     &oab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h12b-1),4,2,1,5,3,-1.0d0,.false.)
      END IF
      IF ((h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h11b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - n
     &oab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),3,2,1,5,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_5',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11b_2 - 1
     &)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_5',6,MA_E
     &RR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h11b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h2b .le. h1b) .and. (h1b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,2,3,1,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h1b - 1 + noab * (h2b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,2,1,3,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_5',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_5_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( h11 h12 h1 h2 )_v + = 1 * v ( h11 h12 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h1b,h2b,h11b_1,h12b_1,h1b_1,h2b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h12b_1 - 1 + (noa
     &b+nvab) * (h11b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-
     &1),4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_5_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h11b-
     &1),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_5_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_5_1(l_a_offset,k_a_offset,size)
C     i1 ( h11 h12 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_5_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h2b - 1 + noab * (h1b - 1 + noab 
     &* (h12b - 1 + noab * (h11b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+h12b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_rang
     &e+h2b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_5_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 h12 h1 h2 )_vt + = -1 * P( 2 ) * Sum ( p7 ) * t ( p7 h1 )_t * i2 ( h11 h12 h2 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER h2b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h1b,p7b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h2b,p7b,h11b_2,h12b_2,h2b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_5_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h2b_2 - 1 + noab * (h12b_2 - 1 + noab * (h11
     &b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h2b-1),int_mb(k_range+p7b-
     &1),3,2,1,4,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_5_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),3,2,1,4,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_5_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_5_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 h12 h1 p7 )_v + = 1 * v ( h11 h12 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER h12b_1
      INTEGER h1b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_4(h11b,h12b,h1b,p7b,h11b_1,h12b_1,h1b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2_1',1,MA_ERR)
      IF ((h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p7b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h12b_1 - 1 + (noa
     &b+nvab) * (h11b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_1',2,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h11b-
     &1),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_1',4,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_
     &1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_5_2_1(l_a_offset,k_a_offset,size)
C     i2 ( h11 h12 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h1b - 1 
     &+ noab * (h12b - 1 + noab * (h11b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+h12b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_rang
     &e+p7b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_5_2_2(d_a,k_a_offset,d_b,k_b_offset,d_c,
     &k_c_offset)
C     i2 ( h11 h12 h1 p7 )_vt + = -1/2 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h11 h12 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,p7b,p8b,h11b_2,h12b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_2',3,
     &MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2_2',5,MA_ERR)
      IF ((p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-
     &1),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-
     &1),3,2,1,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_2',6,
     &MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_
     &2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_
     &2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_2_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h12b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_2',10
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_2_
     &2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_5_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h11 h12 h1 h2 )_vt + = 1/2 * Sum ( p7 p8 ) * t ( p7 p8 h1 h2 )_t * v ( h11 h12 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER h12b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h11b_2
      INTEGER h12b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO h12b = h11b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p7b,p8b,h1b,h2b,p7b_1,p8b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(h11b,h12b,p7b,p8b,h11b_2,h12b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_5_3',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_5_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_3',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-
     &1),2,1,4,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_5_3',6,MA
     &_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_3'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_3'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_5_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-
     &1),2,1,4,3,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h12b - 1 + noab * (h11b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_5_3',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_5_3'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xv + = -1 * P( 6 ) * Sum ( p10 h9 ) * x ( p4 p10 h1 h2 h9 )_x * i1 ( h9 p5 h3 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h9b_1
      INTEGER p5b_2
      INTEGER h9b_2
      INTEGER h3b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p5b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_v)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1)+int_mb(k_a
     &ctive+p10b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h9b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h9b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(p4b,dummy_p6b,p10b,h1b,h2b,h9b,p4b_1,dummy_p
     &6b_1,p10b_1,h1b_1,h2b_1,h9b_1)
      CALL TCE_RESTRICTED_4(p5b,h9b,h3b,p10b,p5b_2,h9b_2,h3b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6',2,MA_ERR)
      IF ((p10b .lt. p4b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p10b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),5,4,2,3,1,-1.0d0,.false.)
      END IF
      IF ((p10b .lt. p4b) .and. (h1b .le. h9b) .and. (h9b .lt. h2b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p10b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h2b-1),5,3,2,4,1,1.0d0,.false.)
      END IF
      IF ((p10b .lt. p4b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p10b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h9b-1),4,3,2,5,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),5,4,1,3,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b) .and. (h1b .le. h9b) .and. (h9b .lt. h2b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h2b-1),5,3,1,4,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b) .and. (h2b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h9b-1),4,3,1,5,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_6',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h9b_2 - 1 + noab * (p5b
     &_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h3b-1),int_mb(k_range+p10b-1
     &),3,1,2,4,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_6',6,MA_E
     &RR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6',9,MA_ERR)
      IF ((p4b .le. p5b) .and. (h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,2,4,3,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p4b .le. p5b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,2,1,4,3,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p4b .le. p5b) .and. (h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,2,4,1,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),2,5,4,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),2,5,1,4,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),2,5,4,1,3,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_6',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_6_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( h9 p4 h1 p10 )_v + = 1 * v ( h9 p4 h1 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h9b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER p4b_1
      INTEGER h9b_1
      INTEGER h1b_1
      INTEGER p10b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p10b-1)
      CALL TCE_RESTRICTED_4(p4b,h9b,h1b,p10b,p4b_1,h9b_1,h1b_1,p10b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+p10b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_1',1,MA_ERR)
      IF ((h9b .le. p4b) .and. (h1b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p10b_
     &1 - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (p4b_1 - 1 + (noa
     &b+nvab) * (h9b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p10b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_6_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+p4b-1
     &),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h9b - 1 + noab * (p4b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_6_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_6_1(l_a_offset,k_a_offset,size)
C     i1 ( h9 p4 h1 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER h9b
      INTEGER h1b
      INTEGER p10b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_6_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+p4b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p10b - noab - 1 + nvab * (h1b - 1
     & + noab * (h9b - 1 + noab * (p4b - noab - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+h9b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range+
     &p10b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_6_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h9 p4 h1 p10 )_vt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * v ( h9 p4 p7 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h9b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER h9b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h1b,p7b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p4b,h9b,p10b,p7b,p4b_2,h9b_2,p10b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h9b-1) * int_mb
     &(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_6_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_2',5,MA_ERR)
      IF ((h9b .le. p4b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),4,1,2,3,1.0d0,.false.)
      END IF
      IF ((h9b .le. p4b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_6_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),3,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h9b - 1 + noab * (p4b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_6_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_6_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h9 p4 h1 p10 )_vt + = -1 * Sum ( h8 p7 ) * t ( p4 p7 h1 h8 )_t * v ( h8 h9 p7 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h9b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_2
      INTEGER h8b_2
      INTEGER p10b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h9b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1
     &)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_v,irrep_t)) T
     &HEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h9b-1) * int_mb(k_ra
     &nge+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p7b,h1b,h8b,p4b_1,p7b_1,h1b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h9b,h8b,p10b,p7b,h9b_2,h8b_2,p10b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_3',2,MA_ERR)
      IF ((p7b .lt. p4b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,2,4,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1)
     &,3,1,4,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_6_3',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_6_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_3',5,MA_ERR)
      IF ((h8b .le. h9b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h8b .le. h9b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h9b .lt. h8b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h9b .lt. h8b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_6_3',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6_3'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6_3'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_6_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+p4b-1
     &),4,2,3,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h9b - 1 + noab * (p4b - noa
     &b - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_6_3',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_6_3'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_7(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * Sum ( p7 p8 ) * x ( p7 p8 h1 h2 h3 )_x * v ( p4 p5 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER dummy_p6b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER p4b_2
      INTEGER p5b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_v)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_7',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1)+int_mb(k_active+p7b-1)+int_mb(k_a
     &ctive+p8b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+
     &p8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(i
     &nt_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(dummy_p6b,p7b,p8b,h1b,h2b,h3b,dummy_p6b_1,p7
     &b_1,p8b_1,h1b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_4(p4b,p5b,p7b,p8b,p4b_2,p5b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_7',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),5,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_7',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_7',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p5b_2 - 1 + (noab
     &+nvab) * (p4b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,2,1,4,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_7',6,MA_E
     &RR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_7',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_7',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_7',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),2,1,5,4,3,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_7',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_7',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_8(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xf + = -1 * Sum ( p11 h10 ) * x ( p4 p5 p11 h1 h2 h3 h10 )_x * i1 ( h10 p11 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER h10b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER dummy_p6b_1
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h10b_1
      INTEGER h10b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_f)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_8',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1)+int_mb(k_active+p11b-1) .ge. numacq) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1)+int_mb(k_active+h10b-1) .ge. numacq) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_sp
     &in+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_mb(k_sym+h1b
     &-1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym
     &+h10b-1)))))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_8(p4b,p5b,dummy_p6b,p11b,h1b,h2b,h3b,h10b,p4b_
     &1,p5b_1,dummy_p6b_1,p11b_1,h1b_1,h2b_1,h3b_1,h10b_1)
      CALL TCE_RESTRICTED_2(h10b,p11b,h10b_2,p11b_2)
      dim_common = int_mb(k_range+p11b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b
     &-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = 1
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_8',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8',2,MA_ERR)
      IF ((p11b .lt. p4b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &1b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),7,6,5,3,2,4,1,-1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &1b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),7,6,4,3,2,5,1,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &1b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-
     &1),7,5,4,3,2,6,1,-1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h3b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p1
     &1b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-
     &1),6,5,4,3,2,7,1,1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h10b .lt. h1b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),7,6,5,3,1,4,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h1b .le. h10b) .a
     &nd. (h10b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),7,6,4,3,1,5,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h2b .le. h10b) .a
     &nd. (h10b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-
     &1),7,5,4,3,1,6,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h3b .le. h10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-
     &1),6,5,4,3,1,7,2,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 
     &+ noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),7,6,5,2,1,4,3,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-
     &1),7,6,4,2,1,5,3,1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h2b .le. h10b) .and. (h10b .lt. h3b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h3b-
     &1),7,5,4,2,1,6,3,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h3b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 
     &+ noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p
     &4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h10b-
     &1),6,5,4,2,1,7,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_8',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_8',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (h10b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+p11b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_8',6,MA_E
     &RR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_8',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_8',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_8',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_8',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_8_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( h10 p11 )_f + = 1 * f ( h10 p11 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER p11b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. irrep_f) 
     &THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      CALL TCE_RESTRICTED_2(h10b,p11b,h10b_1,p11b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_8_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p11b_
     &1 - 1 + (noab+nvab) * (h10b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+p11b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_8_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h10b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_8_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_8_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_8_1(l_a_offset,k_a_offset,size)
C     i1 ( h10 p11 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER p11b
      DOUBLE PRECISION size
      length = 0
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_8_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p11b - noab - 1 + nvab * (h10b - 
     &1))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h10b-1)) * dfloat(int_mb(k_ran
     &ge+p11b-1))
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_8_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h10 p11 )_vt + = 1 * Sum ( h8 p7 ) * t ( p7 h8 )_t * v ( h8 h10 p7 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p7b_1
      INTEGER h8b_1
      INTEGER h10b_2
      INTEGER h8b_2
      INTEGER p11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+p11b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h10b-1) .eq. int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),int_mb(k_sym+p11b-1)) .eq. ieor(irre
     &p_v,irrep_t)) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_8_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h8b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h8b,p7b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h10b,h8b,p11b,p7b,h10b_2,h8b_2,p11b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_8_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_8_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_8_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8_2',5,MA_ERR)
      IF ((h8b .le. h10b) .and. (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b-
     &1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h8b .le. h10b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b-
     &1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h10b .lt. h8b) .and. (p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b-
     &1),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h10b .lt. h8b) .and. (p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b-
     &1),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_8_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_8_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_8_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_8_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h10b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h10b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_8_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_8_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_9(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c_
     &offset)
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * P( 3 ) * Sum ( p11 h10 h12 ) * x ( p4 p5 p11 h1 h2 h10 h12 )_x * i1 ( h10 h12 h3 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p11b
      INTEGER h10b
      INTEGER h12b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER dummy_p6b_1
      INTEGER p11b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h10b_1
      INTEGER h12b_1
      INTEGER h10b_2
      INTEGER h12b_2
      INTEGER h3b_2
      INTEGER p11b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_v)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_9',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p11b = noab+1,noab+nvab
      DO h10b = 1,noab
      DO h12b = h10b,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1)+int_mb(k_active+p11b-1) .ge. numacq) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h10b-1)+int_mb(k_active+h12b-1) .ge. numacq) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1)+int_mb(k_spin+p11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_sp
     &in+h2b-1)+int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p11b-1),ieor(int_mb(k_sym+h1b
     &-1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h10b-1),int_mb(k_sy
     &m+h12b-1)))))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_8(p4b,p5b,dummy_p6b,p11b,h1b,h2b,h10b,h12b,p4b
     &_1,p5b_1,dummy_p6b_1,p11b_1,h1b_1,h2b_1,h10b_1,h12b_1)
      CALL TCE_RESTRICTED_4(h10b,h12b,h3b,p11b,h10b_2,h12b_2,h3b_2,p11b_
     &2)
      dim_common = int_mb(k_range+p11b-1) * int_mb(k_range+h10b-1) * int
     &_mb(k_range+h12b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b
     &-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_9',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9',2,MA_ERR)
      IF ((p11b .lt. p4b) .and. (h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h12b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &11b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b
     &-1),7,6,3,2,5,4,1,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h10b .lt. h1b) .and. (h1b .le. h12b) .a
     &nd. (h12b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &11b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h2b
     &-1),7,5,3,2,6,4,1,-1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h10b .lt. h1b) .and. (h2b .le. h12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &11b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h12b
     &-1),6,5,3,2,7,4,1,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h1b .le. h10b) .and. (h12b .lt. h2b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &11b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h12b-1),int_mb(k_range+h2b
     &-1),7,4,3,2,6,5,1,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b) .a
     &nd. (h2b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &11b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h12b
     &-1),6,4,3,2,7,5,1,-1.0d0,.false.)
      END IF
      IF ((p11b .lt. p4b) .and. (h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p
     &11b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h12b
     &-1),5,4,3,2,7,6,1,1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h12b .lt. h1b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h12b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b
     &-1),7,6,3,1,5,4,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h10b .lt. h1b) .a
     &nd. (h1b .le. h12b) .and. (h12b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h2b
     &-1),7,5,3,1,6,4,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h10b .lt. h1b) .a
     &nd. (h2b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h12b
     &-1),6,5,3,1,7,4,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h1b .le. h10b) .a
     &nd. (h12b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h12b-1),int_mb(k_range+h2b
     &-1),7,4,3,1,6,5,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h1b .le. h10b) .a
     &nd. (h10b .lt. h2b) .and. (h2b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h12b
     &-1),6,4,3,1,7,5,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p11b) .and. (p11b .lt. p5b) .and. (h2b .le. h10b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p5b_1 - noab - 1 + nvab * (p11b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p11b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h12b
     &-1),5,4,3,1,7,6,2,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h12b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h12b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b
     &-1),7,6,2,1,5,4,3,1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h10b .lt. h1b) .and. (h1b .le. h12b) .a
     &nd. (h12b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h2b
     &-1),7,5,2,1,6,4,3,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h10b .lt. h1b) .and. (h2b .le. h12b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1
     & + noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h10b-
     &1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h12b
     &-1),6,5,2,1,7,4,3,1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h1b .le. h10b) .and. (h12b .lt. h2b)) T
     &HEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h12b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h12b-1),int_mb(k_range+h2b
     &-1),7,4,2,1,6,5,3,1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b) .a
     &nd. (h2b .le. h12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h2b-1),int_mb(k_range+h12b
     &-1),6,4,2,1,7,5,3,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p11b) .and. (h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h12b_
     &1 - 1 + noab * (h10b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1
     & + noab * (p11b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (
     &p4b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p11b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h10b-1),int_mb(k_range+h12b
     &-1),5,4,2,1,7,6,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_9',3,MA_E
     &RR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_9',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h12b_2 - 1 + noab * (h1
     &0b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h3b-1),int_mb(k_range+p11b
     &-1),3,2,1,4,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_9',6,MA_E
     &RR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h10b .eq. h12b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_9',7
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_9',8
     &,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9',9,MA_ERR)
      IF ((h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,1,3,2,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,1,2,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_9',10,MA_
     &ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_9',1
     &1,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_9_1(d_a,k_a_offset,d_c,k_c_offset)
C     i1 ( h10 h12 h1 p11 )_v + = 1 * v ( h10 h12 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h12b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h12b_1
      INTEGER h1b_1
      INTEGER p11b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h12b = h10b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p11b-1)
      CALL TCE_RESTRICTED_4(h10b,h12b,h1b,p11b,h10b_1,h12b_1,h1b_1,p11b_
     &1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p11b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_9_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9_1',1,MA_ERR)
      IF ((h1b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p11b_
     &1 - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h12b_1 - 1 + (no
     &ab+nvab) * (h10b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h1b-1),int_mb(k_range+p11b
     &-1),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_9_1',2,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h12b-1),int_mb(k_range+h10b
     &-1),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + noab * (h10b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_9_1',4,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_9_1'
     &,5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_9_1(l_a_offset,k_a_offset,size)
C     i1 ( h10 h12 h1 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h12b
      INTEGER h1b
      INTEGER p11b
      DOUBLE PRECISION size
      length = 0
      DO h10b = 1,noab
      DO h12b = h10b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_9_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h10b = 1,noab
      DO h12b = h10b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p11b - noab - 1 + nvab * (h1b - 1
     & + noab * (h12b - 1 + noab * (h10b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h10b-1)) * dfloat(int_mb(k_ran
     &ge+h12b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_rang
     &e+p11b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_9_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k_
     &c_offset)
C     i1 ( h10 h12 h1 p11 )_vt + = 1 * Sum ( p7 ) * t ( p7 h1 )_t * v ( h10 h12 p7 p11 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h12b
      INTEGER h1b
      INTEGER p11b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h10b_2
      INTEGER h12b_2
      INTEGER p11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h12b = h10b,noab
      DO h1b = 1,noab
      DO p11b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p11b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h12b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p11b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h12b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p11b-1)))) .eq. ieor(irrep_v,irrep_t))
     & THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h12b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p11b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_9_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p7b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p7b,h1b,p7b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h10b,h12b,p11b,p7b,h10b_2,h12b_2,p11b_2,p7b_
     &2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h12b-1) * int_
     &mb(k_range+p11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_9_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p7b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_9_2',3,MA
     &_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_9_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9_2',5,MA_ERR)
      IF ((p7b .le. p11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p11b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (no
     &ab+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p7b-1),int_mb(k_range+p11b
     &-1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((p11b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p11b_2 - 1 + (noab+nvab) * (h12b_2 - 1 + (no
     &ab+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+p11b-1),int_mb(k_range+p7b
     &-1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_9_2',6,MA
     &_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_9_2'
     &,7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_9_2'
     &,8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_9_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p11b-1
     &),int_mb(k_range+h12b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b
     &-1),3,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p11b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h12b - 1 + noab * (h10b - 1
     &)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_9_2',10,M
     &A_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_9_2'
     &,11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_10(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_xv + = 1/2 * P( 2 ) * Sum ( p8 p9 h7 ) * x ( p4 p8 p9 h1 h2 h3 h7 )_x * v ( h7 p5 p8 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p5b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER h7b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h7b_1
      INTEGER p5b_2
      INTEGER h7b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p5b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_x,irrep_v)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_10',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      DO h7b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1)+int_mb(k_a
     &ctive+p8b-1)+int_mb(k_active+p9b-1) .ge. numacq) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1)+int_mb(k_active+h7b-1) .ge. numacq) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &p8b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spi
     &n+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(k_sym+h1b-
     &1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+
     &h7b-1)))))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_8(p4b,dummy_p6b,p8b,p9b,h1b,h2b,h3b,h7b,p4b_1,
     &dummy_p6b_1,p8b_1,p9b_1,h1b_1,h2b_1,h3b_1,h7b_1)
      CALL TCE_RESTRICTED_4(p5b,h7b,p8b,p9b,p5b_2,h7b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1) * int_m
     &b(k_range+h7b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b
     &-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_10',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_10',2,MA_ERR)
      IF ((p9b .lt. p4b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p4b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,7,6,5,3,4,2,1,-1.0d0,.false.)
      END IF
      IF ((p9b .lt. p4b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,7,6,4,3,5,2,1,1.0d0,.false.)
      END IF
      IF ((p9b .lt. p4b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1)
     &,7,5,4,3,6,2,1,-1.0d0,.false.)
      END IF
      IF ((p9b .lt. p4b) .and. (h3b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1)
     &,6,5,4,3,7,2,1,1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (p4b .le. p9b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p9b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,7,6,5,2,4,3,1,1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (p4b .le. p9b) .and. (h1b .le. h7b) .and.
     & (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,7,6,4,2,5,3,1,-1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (p4b .le. p9b) .and. (h2b .le. h7b) .and.
     & (h7b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1)
     &,7,5,4,2,6,3,1,1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (p4b .le. p9b) .and. (h3b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1)
     &,6,5,4,2,7,3,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p8b) .and. (h7b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h7b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,7,6,5,1,4,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p8b) .and. (h1b .le. h7b) .and. (h7b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h7b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,7,6,4,1,5,3,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p8b) .and. (h2b .le. h7b) .and. (h7b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h7b-1),int_mb(k_range+h3b-1)
     &,7,5,4,1,6,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p8b) .and. (h3b .le. h7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h7b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p9b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h7b-1)
     &,6,5,4,1,7,3,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_10',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_10',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_10',5,MA_ERR)
      IF ((h7b .le. p5b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (p5b_2 - 1 + (noab
     &+nvab) * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1)
     &,2,1,4,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_10',6,MA_
     &ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_10',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_10',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_10',9,MA_ERR)
      IF ((p4b .le. p5b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,1,4,3,2,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),1,5,4,3,2,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_10',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_10',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -3 * P( 2 ) * Sum ( h11 ) * t ( p4 h11 )_t * i1 ( h11 p5 h1 h2 h3 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h11b
      INTEGER p4b_1
      INTEGER h11b_1
      INTEGER p5b_2
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h11b = 1,noab
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+h11b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p4b,h11b,p4b_1,h11b_1)
      CALL TCE_RESTRICTED_6(p5b,dummy_p6b,h11b,h1b,h2b,h3b,p5b_2,dummy_p
     &6b_2,h11b_2,h1b_2,h2b_2,h3b_2)
      dim_common = int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b
     &-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (p4b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h11b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (h1b_2 - 1 + noab * (h11b_2 - 1 
     &+ noab * (p5b_2 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h3b-1),5,4,3,1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11',6,MA_
     &ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11',9,MA_ERR)
      IF ((p4b .le. p5b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,-3.0d0/1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),4,5,3,2,1,3.0d0/1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_vx + = 1/3 * P( 3 ) * Sum ( p10 ) * x ( p10 h1 h2 )_x * i2 ( h11 p4 h3 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p4b_2
      INTEGER h11b_2
      INTEGER h3b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p10b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p10b,h1b,h2b,dummy_p6b_1,p10b_1,h1
     &b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p4b,h11b,h3b,p10b,p4b_2,h11b_2,h3b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h11b_2 - 1 + noab * (p4
     &b_2 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h3b-1),int_mb(k_range+p10b-
     &1),3,2,1,4,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_1',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1',9,MA_ERR)
      IF ((h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p4b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h1b-1),3,2,5,4,1,1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p4b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h1b-1),3,2,1,5,4,1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF ((h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p4b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h1b-1),3,2,5,1,4,-1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_1(l_a_offset,k_a_offset,size)
C     i1 ( h11 p4 h1 h2 h3 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h3b - 1 + noab * (h2b - 1 + noab 
     &* (h1b - 1 + noab * (h11b - 1 + noab * (p4b - noab - 1)))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+dummy_p6b-1)) * dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k
     &_range+h1b-1)) * dfloat(int_mb(k_range+h2b-1)) * dfloat(int_mb(k_r
     &ange+h3b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_1_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 p4 h1 p10 )_v + = 1 * v ( h11 p4 h1 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER p4b_1
      INTEGER h11b_1
      INTEGER h1b_1
      INTEGER p10b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p10b-1)
      CALL TCE_RESTRICTED_4(p4b,h11b,h1b,p10b,p4b_1,h11b_1,h1b_1,p10b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p10b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_1',1,MA_ERR)
      IF ((h11b .le. p4b) .and. (h1b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p10b_
     &1 - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (p4b_1 - 1 + (noa
     &b+nvab) * (h11b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p10b-
     &1),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_1',2
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+p4b-
     &1),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_1',4
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_1_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 p4 h1 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER p10b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+p4b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p4b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p10b - noab - 1 + nvab * (h1b - 1
     & + noab * (h11b - 1 + noab * (p4b - noab - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range
     &+p10b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_1_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 p4 h1 p10 )_vt + = 1/2 * Sum ( h8 ) * t ( p4 h8 )_t * i3 ( h8 h11 h1 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h8b
      INTEGER p4b_1
      INTEGER h8b_1
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h8b = 1,noab
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+h8b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p4b,h8b,p4b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h11b,h8b,h1b,p10b,h11b_2,h8b_2,h1b_2,p10b_2)
      dim_common = int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (p4b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h8b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2',5,MA_ERR)
      IF ((h8b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h1b_2 - 1 + noab * (h11b_2 - 1 + noab * (h8
     &b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p10b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - noab - 1 + nvab * (h1b_2 - 1 + noab * (h8b_2 - 1 + noab * (h11
     &b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+p10b-
     &1),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+p4b-
     &1),4,3,2,1,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_1_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i3 ( h8 h11 h1 p10 )_v + = 1 * v ( h8 h11 h1 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER h8b_1
      INTEGER h11b_1
      INTEGER h1b_1
      INTEGER p10b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p10b-1)
      CALL TCE_RESTRICTED_4(h8b,h11b,h1b,p10b,h8b_1,h11b_1,h1b_1,p10b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p10b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2_1',1,MA_ERR)
      IF ((h1b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p10b_
     &1 - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h11b_1 - 1 + (no
     &ab+nvab) * (h8b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p10b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_1'
     &,2,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-
     &1),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h8b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_1'
     &,4,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_2_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_1_2_1(l_a_offset,k_a_offset,si
     &ze)
C     i3 ( h8 h11 h1 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER p10b
      DOUBLE PRECISION size
      length = 0
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p10b - noab - 1 + nvab * (h1b - 1
     & + noab * (h11b - 1 + noab * (h8b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h8b-1)) * dfloat(int_mb(k_rang
     &e+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_range
     &+p10b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_1_2_2(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     i3 ( h8 h11 h1 p10 )_vt + = 1 * Sum ( p9 ) * t ( p9 h1 )_t * v ( h8 h11 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h8b_2
      INTEGER h11b_2
      INTEGER p10b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p9b,h1b,p9b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h8b,h11b,p10b,p9b,h8b_2,h11b_2,p10b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p9b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_2'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2_2',5,MA_ERR)
      IF ((p9b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((p10b .lt. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p10b-1),int_mb(k_range+p9b-
     &1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_2'
     &,6,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_2_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_2_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_2_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h8b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_2_2'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_2_2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_1_3(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 p4 h1 p10 )_vt + = 1 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h11 p4 p8 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER p10b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER h11b_2
      INTEGER p10b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p10b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p10b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+p10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+p10b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_mb(k_r
     &ange+h1b-1) * int_mb(k_range+p10b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p4b,h11b,p10b,p8b,p4b_2,h11b_2,p10b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1) * int_m
     &b(k_range+p10b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_3',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_1_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_3',5,MA_ERR)
      IF ((h11b .le. p4b) .and. (p8b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p10b-
     &1),4,1,2,3,1.0d0,.false.)
      END IF
      IF ((h11b .le. p4b) .and. (p10b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+p8b-
     &1),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_3',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_1_3',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p10b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (p4b - no
     &ab - 1)))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_1_3',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_1
     &_3',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_fx + = -1/3 * Sum ( p7 ) * x ( p4 p7 h1 h2 h3 )_x * i2 ( h11 p7 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_f,irrep_x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1)+int_mb(k_a
     &ctive+p7b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &p7b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(p4b,dummy_p6b,p7b,h1b,h2b,h3b,p4b_1,dummy_p6
     &b_1,p7b_1,h1b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_2(h11b,p7b,h11b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b
     &-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2',2,MA_ERR)
      IF ((p7b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),5,4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),5,4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_2',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h11b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p7b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_2',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_2
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_2
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,1,4,3,2,-1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_2',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_2
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 p7 )_f + = 1 * f ( h11 p7 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p7b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. irrep_f) T
     &HEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_2(h11b,p7b,h11b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p7b_1
     & - 1 + (noab+nvab) * (h11b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p7b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_2_1',2
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h11b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_2_1',4
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_2
     &_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_2_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 p7 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h11b - 1
     &))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+p7b-1))
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_2_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 p7 )_vt + = -1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. ieor(irrep
     &_v,irrep_t)) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h9b,p8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,p7b,p8b,h11b_2,h9b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_2_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2_2',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1
     &),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((h9b .le. h11b) .and. (p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1
     &),4,1,2,3,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_2_2',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_2
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_2
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_2_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h11b-1),2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_2_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_2
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_vx + = 1/3 * P( 3 ) * Sum ( h10 p7 ) * x ( p4 p7 h1 h2 h10 )_x * i2 ( h10 h11 h3 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h10b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h10b_1
      INTEGER h11b_2
      INTEGER h10b_2
      INTEGER h3b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h10b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1)+int_mb(k_a
     &ctive+p7b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h10b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &p7b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h10b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(p4b,dummy_p6b,p7b,h1b,h2b,h10b,p4b_1,dummy_p
     &6b_1,p7b_1,h1b_1,h2b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h11b,h10b,h3b,p7b,h11b_2,h10b_2,h3b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3',2,MA_ERR)
      IF ((p7b .lt. p4b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p7b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),5,4,2,3,1,-1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p7b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),5,3,2,4,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - no
     &ab - 1 + nvab * (p7b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),4,3,2,5,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h10b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h10b_1 - 1 + noab * (p7b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),5,4,1,3,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h1b .le. h10b) .and. (h10b .lt. h2b)) TH
     &EN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h10b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h10b-1
     &),int_mb(k_range+h2b-1),5,3,1,4,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (h2b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h10b-1),4,3,1,5,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_3',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3',5,MA_ERR)
      IF ((h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h3b_2 - 1 + noab * (h11b_2 - 1 + noab * (h10
     &b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h3b-1),int_mb(k_range+p7b-
     &1),3,2,1,4,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h3b_2 - 1 + noab * (h10b_2 - 1 + noab * (h11
     &b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+h3b-1),int_mb(k_range+p7b-
     &1),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_3',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_3
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_3
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3',9,MA_ERR)
      IF ((h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,2,4,3,1,1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,2,1,4,3,1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF ((h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,2,4,1,3,-1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_3',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_3
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_3_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h10 h11 h1 p7 )_v + = 1 * v ( h10 h11 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER h10b_1
      INTEGER h11b_1
      INTEGER h1b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_4(h10b,h11b,h1b,p7b,h10b_1,h11b_1,h1b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_3_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3_1',1,MA_ERR)
      IF ((h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p7b_1
     & - 1 + (noab+nvab) * (h1b_1 - 1 + (noab+nvab) * (h11b_1 - 1 + (noa
     &b+nvab) * (h10b_1 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_3_1',2
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3_1',3,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),int_mb(k_range+h10b-
     &1),4,3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h10b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_3_1',4
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_3
     &_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_3_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h10 h11 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_3_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. irrep_v) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h1b - 1 
     &+ noab * (h11b - 1 + noab * (h10b - 1))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h10b-1)) * dfloat(int_mb(k_ran
     &ge+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_rang
     &e+p7b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_3_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h10 h11 h1 p7 )_vt + = -1 * Sum ( p8 ) * t ( p8 h1 )_t * v ( h10 h11 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h10b
      INTEGER h11b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h10b_2
      INTEGER h11b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h10b = 1,noab
      DO h11b = h10b,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b
     &-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h10b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k_spin
     &+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h10b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_m
     &b(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_t)) 
     &THEN
      dimc = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_mb(k_
     &range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_3_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(h10b,h11b,p7b,p8b,h10b_2,h11b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h10b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_3_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_3_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_3_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3_2',5,MA_ERR)
      IF ((p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-
     &1),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-
     &1),3,2,1,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_3_2',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_3
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_3
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_3_2',9,MA_ERR)
      CALL TCE_SORT_4(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h10b-1),int_mb(k_range+h1b-
     &1),3,2,4,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1 + noab * (h10b - 1)
     &))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_3_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_3
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_vx + = 1/6 * Sum ( p8 p9 ) * x ( p8 p9 h1 h2 h3 )_x * v ( h11 p4 p8 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER dummy_p6b_1
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER p4b_2
      INTEGER h11b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_4',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1)+int_mb(k_active+p8b-1)+int_mb(k_a
     &ctive+p9b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+
     &p9b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p8b-1),ieor(i
     &nt_mb(k_sym+p9b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(dummy_p6b,p8b,p9b,h1b,h2b,h3b,dummy_p6b_1,p8
     &b_1,p9b_1,h1b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_4(p4b,h11b,p8b,p9b,p4b_2,h11b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_4',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noa
     &b - 1 + nvab * (p8b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),5,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_4',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_4',5,MA_ERR)
      IF ((h11b .le. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1
     &),1,2,4,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_4',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_4
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_4
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_4',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h1b-1),2,1,5,4,3,1.0d0/6.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_4',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_4
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_vx + = -1/6 * Sum ( h8 p9 p10 ) * x ( p4 p9 p10 h1 h2 h3 h8 )_x * v ( h8 h11 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h8b_1
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_5',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1)+int_mb(k_a
     &ctive+p9b-1)+int_mb(k_active+p10b-1) .ge. numacq) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1)+int_mb(k_active+h8b-1) .ge. numacq) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &p9b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_sp
     &in+h2b-1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p9b-1),ieor(int_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b
     &-1),ieor(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym
     &+h8b-1)))))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_8(p4b,dummy_p6b,p9b,p10b,h1b,h2b,h3b,h8b,p4b_1
     &,dummy_p6b_1,p9b_1,p10b_1,h1b_1,h2b_1,h3b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h11b,h8b,p9b,p10b,h11b_2,h8b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1) * int_
     &mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b
     &-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_5',2,MA_ERR)
      IF ((p10b .lt. p4b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p4b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),7,6,5,3,4,2,1,-1.0d0,.false.)
      END IF
      IF ((p10b .lt. p4b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),7,6,4,3,5,2,1,1.0d0,.false.)
      END IF
      IF ((p10b .lt. p4b) .and. (h2b .le. h8b) .and. (h8b .lt. h3b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),int_mb(k_range+h3b-1
     &),7,5,4,3,6,2,1,-1.0d0,.false.)
      END IF
      IF ((p10b .lt. p4b) .and. (h3b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p4b_1 - noab - 1 + nvab * (p10b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h8b-1
     &),6,5,4,3,7,2,1,1.0d0,.false.)
      END IF
      IF ((p9b .lt. p4b) .and. (p4b .le. p10b) .and. (h8b .lt. h1b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),7,6,5,2,4,3,1,1.0d0,.false.)
      END IF
      IF ((p9b .lt. p4b) .and. (p4b .le. p10b) .and. (h1b .le. h8b) .and
     &. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),7,6,4,2,5,3,1,-1.0d0,.false.)
      END IF
      IF ((p9b .lt. p4b) .and. (p4b .le. p10b) .and. (h2b .le. h8b) .and
     &. (h8b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),int_mb(k_range+h3b-1
     &),7,5,4,2,6,3,1,1.0d0,.false.)
      END IF
      IF ((p9b .lt. p4b) .and. (p4b .le. p10b) .and. (h3b .le. h8b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p9
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h8b-1
     &),6,5,4,2,7,3,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p9b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),7,6,5,1,4,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p9b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1
     &),7,6,4,1,5,3,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p9b) .and. (h2b .le. h8b) .and. (h8b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),int_mb(k_range+h3b-1
     &),7,5,4,1,6,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p9b) .and. (h3b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p10b_1 - noab - 1 + nvab * (p9b_1 - noab - 1 + nvab * (p4
     &b_1 - noab - 1))))))))
      CALL TCE_SORT_7(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p10b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),int_mb(k_range+h8b-1
     &),6,5,4,1,7,3,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_5',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_5',5,MA_ERR)
      IF ((h8b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),2,1,4,3,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),1,2,4,3,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_5',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_5
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_5
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_5',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,1,4,3,2,-1.0d0/6.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_5',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_5
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_vxt + = 1/12 * Sum ( h8 ) * t ( p4 h8 )_t * i2 ( h8 h11 h1 h2 h3 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h8b
      INTEGER p4b_1
      INTEGER h8b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_
     &t))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_6',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h8b = 1,noab
      IF (int_mb(k_spin+p4b-1) .eq. int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),int_mb(k_sym+h8b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p4b,h8b,p4b_1,h8b_1)
      CALL TCE_RESTRICTED_6(dummy_p6b,h11b,h8b,h1b,h2b,h3b,dummy_p6b_2,h
     &11b_2,h8b_2,h1b_2,h2b_2,h3b_2)
      dim_common = int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) *
     & int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3
     &b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_6',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (p4b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h8b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_6',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_6',5,MA_ERR)
      IF ((h8b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (h1b_2 - 1 + noab * (h11b_2 - 1 
     &+ noab * (h8b_2 - 1))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+dummy_
     &p6b-1),int_mb(k_range+h8b-1),int_mb(k_range+h11b-1),int_mb(k_range
     &+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,3,1,2,1.
     &0d0,.false.)
      END IF
      IF ((h11b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (h1b_2 - 1 + noab * (h8b_2 - 1 +
     & noab * (h11b_2 - 1))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+dummy_
     &p6b-1),int_mb(k_range+h11b-1),int_mb(k_range+h8b-1),int_mb(k_range
     &+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,2,1,3,-1
     &.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_6',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_6
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_6
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_6',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1
     &),int_mb(k_range+p4b-1),5,4,3,2,1,1.0d0/12.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_6',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_6
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_6_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h8 h11 h1 h2 h3 )_vx + = 1 * Sum ( p9 p10 ) * x ( p9 p10 h1 h2 h3 )_x * v ( h8 h11 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER dummy_p6b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h8b_2
      INTEGER h11b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h8b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h8b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_6_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1)+int_mb(k_active+p9b-1)+int_mb(k_a
     &ctive+p10b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+
     &p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p9b-1),ieor(i
     &nt_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(dummy_p6b,p9b,p10b,h1b,h2b,h3b,dummy_p6b_1,p
     &9b_1,p10b_1,h1b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_4(h8b,h11b,p9b,p10b,h8b_2,h11b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_6_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p9b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h3b-1),5,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_6_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_6_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),2,1,4,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_6_1',6
     &,MA_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_6
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_6
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_6_1',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h1b-1),2,1,5,4,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (h8b - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_6_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_6
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_6_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h8 h11 h1 h2 h3 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy
     &_p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_6_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h11b = h8b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy
     &_p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h11b-1),ieor(int_mb
     &(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+h11b-
     &1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h3b - 1 + noab * (h2b - 1 + noab 
     &* (h1b - 1 + noab * (h11b - 1 + noab * (h8b - 1)))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h8b-1)) * dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k
     &_range+h1b-1)) * dfloat(int_mb(k_range+h2b-1)) * dfloat(int_mb(k_r
     &ange+h3b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_7(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_vxt + = 1/3 * P( 3 ) * Sum ( p12 ) * t ( p4 p12 h1 h2 )_t * i2 ( h11 h3 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER p4b_1
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER h3b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_
     &t))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+
     &h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p12b-1),ieor(int_mb
     &(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p12b,h1b,h2b,p4b_1,p12b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h11b,h3b,p12b,dummy_p6b_2,h11b_2,h
     &3b_2,p12b_2)
      dim_common = int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) *
     & int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7',2,MA_ERR)
      IF ((p12b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p12b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p12b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_7',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (h3b_2 - 1 + noab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+p12b-1),2,1,3,1.0d0,.false.
     &)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_7',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7',9,MA_ERR)
      IF ((h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,2,4,3,1,1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,2,1,4,3,1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF ((h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,2,4,1,3,-1.0d0/3.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_7',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_7_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 h11 h1 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER h1b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h9b-1)) .eq. irrep
     &_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h9b,dummy_p6b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,h1b,p12b,h11b_2,h9b_2,h1b_2,p12b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_1',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (h1b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p12b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (h1b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+p12b-
     &1),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_1',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),3,2,1,1.0d0,.false.
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_7_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 h1 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p12b - noab - 1 + nvab * (h1b - 1
     & + noab * (h11b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k
     &_range+p12b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_7_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 p10 ) * x ( p10 h1 h9 )_x * v ( h9 h11 p10 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER p12b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p10b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p10b,h1b,h9b,dummy_p6b_1,p10b_1,h1
     &b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,p12b,p10b,h11b_2,h9b_2,p12b_2,p10b_
     &2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_2',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),3,2,1,-1.0d0,.false.
     &)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),2,3,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_2',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (n
     &oab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h9b .le. h11b) .and. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (n
     &oab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10b
     &-1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (no
     &ab+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (no
     &ab+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10b
     &-1),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_2',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_2',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,3,1,1.0d0,.false.
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_7_3(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 h1 p12 )_vxt + = -1 * Sum ( p8 ) * t ( p8 h1 )_t * i3 ( h11 p8 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER p12b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,ieor
     &(irrep_x,irrep_t))) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h11b,p12b,p8b,dummy_p6b_2,h11b_2,p
     &12b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) *
     & int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_3',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_3',5,MA_ERR)
      IF ((p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p12b-1),3,1,2,1.0d0,.false.
     &)
      END IF
      IF ((p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p8b-1),2,1,3,-1.0d0,.false
     &.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_3',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_3',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,3,1,-1.0d0,.false
     &.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_3',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_3',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_7_3_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     i3 ( h11 p8 p12 )_vx + = -1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p8 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p8b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER dummy_p6b_1
      INTEGER h10b_1
      INTEGER h11b_2
      INTEGER h10b_2
      INTEGER p8b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p8b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_3_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h10b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h10b,dummy_p6b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h11b,h10b,p8b,p12b,h11b_2,h10b_2,p8b_2,p12b_
     &2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_3_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_3_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_3_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_7_3_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_3_1',5,MA_ERR)
      IF ((h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p12b
     &-1),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (no
     &ab+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+p8b-1),int_mb(k_range+p12b
     &-1),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_3_1'
     &,6,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_3_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_3_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_7_3_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+h11b-1),3,2,1,-1.0d0,.false
     &.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_3_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_7
     &_3_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_7_3_1(l_a_offset,k_a_offset,si
     &ze)
C     i3 ( h11 p8 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p8b
      INTEGER p12b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_7_3_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p12b - noab - 1 + nvab * (p8b - n
     &oab - 1 + nvab * (h11b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h11b-1)) * dfloat(int_mb(k_range+p8b-1)) * dfloat(int_mb(k
     &_range+p12b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_8(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 p4 h1 h2 h3 )_vxt + = -1/6 * Sum ( p7 p8 ) * t ( p4 p7 p8 h1 h2 h3 )_t * i2 ( h11 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h
     &2b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &h11b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h11b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_
     &t))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) 
     &* int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_8',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p7b-1)+int_mb(k_active+
     &p8b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p4b,p7b,p8b,h1b,h2b,h3b,p4b_1,p7b_1,p8b_1,h1
     &b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h11b,p7b,p8b,dummy_p6b_2,h11b_2,p7
     &b_2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_8',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_8',2,MA_ERR)
      IF ((p8b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,3,2,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,2,3,1,-1.0d0,.f
     &alse.)
      END IF
      IF ((p4b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,1,3,2,1.0d0,.fa
     &lse.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_8',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_8',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_8',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),1,3,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_8',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_8
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_8
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_8',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+p4b-1),5,1,4,3,2,-1.0d0/6.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h11b - 1 + noab *
     & (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_8',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_8
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_11_8_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 p7 p8 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER dummy_p6b_1
      INTEGER h10b_1
      INTEGER h11b_2
      INTEGER h10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_8_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h10b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h10b,dummy_p6b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h11b,h10b,p7b,p8b,h11b_2,h10b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1) * int_m
     &b(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_8_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_8_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_11_8_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_11_8_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_8_1',5,MA_ERR)
      IF ((h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-
     &1),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_11_8_1',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_8
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_8
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_11_8_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h11b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_11_8_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_11_8
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_11_8_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p7b
      INTEGER p8b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_11_8_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p8b - noab - 1 + nvab * (p7b - no
     &ab - 1 + nvab * (h11b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h11b-1)) * dfloat(int_mb(k_range+p7b-1)) * dfloat(int_mb(k
     &_range+p8b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1 * P( 3 ) * Sum ( h11 ) * t ( p4 p5 h1 h11 )_t * i1 ( h11 h2 h3 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h11b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h1b_1
      INTEGER h11b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = 1,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h11b = 1,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h11b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p5b,h1b,h11b,p4b_1,p5b_1,h1b_1,h11b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h11b,h2b,h3b,dummy_p6b_2,h11b_2,h2
     &b_2,h3b_2)
      dim_common = int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h2b-1) * 
     &int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12',2,MA_ERR)
      IF ((h11b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h11b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1
     &),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((h1b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h11b_
     &1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12',6,MA_
     &ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h2b .le. h1b) .and. (h1b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,2,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h1b - 1 + noab * (h2b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,2,1,3,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h3b - 1 + noab * (h2b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 h1 h2 )_vx + = 1 * Sum ( h8 ) * x ( h8 )_x * v ( h8 h11 h1 h2 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h8b
      INTEGER dummy_p6b_1
      INTEGER h8b_1
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h8b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h8b-1)) .eq. irrep
     &_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h8b,dummy_p6b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h11b,h8b,h1b,h2b,h11b_2,h8b_2,h1b_2,h2b_2)
      dim_common = int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h8b-1)
     &,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_1',5,MA_ERR)
      IF ((h8b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h2b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h2b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_1',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_12_1(l_a_offset,k_a_offset,size)
C     i1 ( h11 h1 h2 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_12_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h2b - 1 + noab * (h1b - 1 + noab 
     &* (h11b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k
     &_range+h2b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 h1 h2 )_fx + = 1 * Sum ( p7 ) * x ( p7 h1 h2 )_x * i2 ( h11 p7 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER dummy_p6b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h11b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_f,irrep
     &_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p7b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p7b,h1b,h2b,dummy_p6b_1,p7b_1,h1b_
     &1,h2b_1)
      CALL TCE_RESTRICTED_2(h11b,p7b,h11b_2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_2',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h11b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p7b-1),1,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_2',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_2
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_2
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),1,3,2,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_2',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_2
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_2_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 p7 )_f + = 1 * f ( h11 p7 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p7b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER p7b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. irrep_f) T
     &HEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      CALL TCE_RESTRICTED_2(h11b,p7b,h11b_1,p7b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_2_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p7b_1
     & - 1 + (noab+nvab) * (h11b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p7b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_2_1',2
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h11b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_2_1',4
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_2
     &_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_12_2_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 p7 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_12_2_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. irrep_f) T
     &HEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h11b - 1
     &))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+p7b-1))
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_2_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 p7 )_vt + = -1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p7b-
     &1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p7b-1)) .eq. ieor(irrep
     &_v,irrep_t)) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_2_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h9b,p8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,p7b,p8b,h11b_2,h9b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_2_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_2_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_2_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2_2',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1
     &),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((h9b .le. h11b) .and. (p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p7b-1
     &),4,1,2,3,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_2_2',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_2
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_2
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_2_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h11b-1),2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_2_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_2
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 h1 h2 )_vx + = -1 * P( 2 ) * Sum ( h8 p9 ) * x ( p9 h1 h8 )_x * v ( h8 h11 h2 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER h8b
      INTEGER dummy_p6b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER h2b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p9b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p9b,h1b,h8b,dummy_p6b_1,p9b_1,h1b_
     &1,h8b_1)
      CALL TCE_RESTRICTED_4(h11b,h8b,h2b,p9b,h11b_2,h8b_2,h2b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_3',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p9b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),3,2,1,-1.0d0,.false.)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),2,3,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_3',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_3',5,MA_ERR)
      IF ((h8b .le. h11b) .and. (h2b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (h2b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h2b-1),int_mb(k_range+p9b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h8b) .and. (h2b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (h2b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noab
     &+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),int_mb(k_range+p9b-1
     &),3,1,2,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_3',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_3
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_3
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_3',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,3,1,-1.0d0,.false.
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,1,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h11b - 1))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_3',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_3
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 h1 h2 )_vx + = 1/2 * Sum ( h8 p9 p10 ) * x ( p9 p10 h1 h2 h8 )_x * v ( h8 h11 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER h8b
      INTEGER dummy_p6b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER h11b_2
      INTEGER h8b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_4',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_active+dummy_p6b-1)+int_mb(k_active+p9b-1)+int_mb(k_a
     &ctive+p10b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h8b-1) .ge. numact) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+
     &p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p9b-1),ieor(i
     &nt_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h8b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(dummy_p6b,p9b,p10b,h1b,h2b,h8b,dummy_p6b_1,p
     &9b_1,p10b_1,h1b_1,h2b_1,h8b_1)
      CALL TCE_RESTRICTED_4(h11b,h8b,p9b,p10b,h11b_2,h8b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1) * int_
     &mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_4',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p9b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),5,4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p9b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+h2b-1),5,3,4,2,1,-1.0d0,.false.)
      END IF
      IF ((h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p9b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h8b-1),4,3,5,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_4',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_4',5,MA_ERR)
      IF ((h8b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),2,1,4,3,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-
     &1),1,2,4,3,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_4',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_4
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_4
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_4',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),1,3,2,1.0d0/2.0d0,.f
     &alse.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_4',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_4
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 h1 h2 )_vxt + = -1 * P( 2 ) * Sum ( p12 ) * t ( p12 h1 )_t * i2 ( h11 h2 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER h2b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,ieor(
     &irrep_x,irrep_t))) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+p12b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p12b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) T
     &HEN
      CALL TCE_RESTRICTED_2(p12b,h1b,p12b_1,h1b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h11b,h2b,p12b,dummy_p6b_2,h11b_2,h
     &2b_2,p12b_2)
      dim_common = int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) *
     & int_mb(k_range+h2b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p12b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_5',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (h2b_2 - 1 + noab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+p12b-1),2,1,3,1.0d0,.false.
     &)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_5',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5',9,MA_ERR)
      IF ((h1b .le. h2b)) THEN
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,3,1,-1.0d0,.false.
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1))))
      END IF
      IF ((h2b .le. h1b)) THEN
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,1,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h1b -
     & 1 + noab * (h2b - 1 + noab * (h11b - 1))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_5',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_5_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 h11 h1 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER h1b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h9b-1)) .eq. irrep
     &_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h9b,dummy_p6b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,h1b,p12b,h11b_2,h9b_2,h1b_2,p12b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+h1b-1) * int_m
     &b(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_1',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (h1b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),int_mb(k_range+p12b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (h1b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+p12b-
     &1),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_1',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h11b-1),3,2,1,1.0d0,.false.
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_12_5_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 h1 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p12b - noab - 1 + nvab * (h1b - 1
     & + noab * (h11b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h11b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k
     &_range+p12b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_5_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 h1 p12 )_vx + = 1 * Sum ( h9 p10 ) * x ( p10 h1 h9 )_x * v ( h9 h11 p10 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER p12b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p10b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p10b,h1b,h9b,dummy_p6b_1,p10b_1,h1
     &b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,p12b,p10b,h11b_2,h9b_2,p12b_2,p10b_
     &2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_2',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),3,2,1,-1.0d0,.false.
     &)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),2,3,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_2',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (n
     &oab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h9b .le. h11b) .and. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (n
     &oab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10b
     &-1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (no
     &ab+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b
     &-1),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (no
     &ab+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10b
     &-1),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_2',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_2',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,3,1,1.0d0,.false.
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_5_3(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 h1 p12 )_vxt + = 1/2 * Sum ( p8 ) * t ( p8 h1 )_t * i3 ( h11 p8 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER p12b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,ieor
     &(irrep_x,irrep_t))) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h11b,p12b,p8b,dummy_p6b_2,h11b_2,p
     &12b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) *
     & int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_3',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_3',5,MA_ERR)
      IF ((p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p12b-1),3,1,2,1.0d0,.false.
     &)
      END IF
      IF ((p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p12b_2 - noab - 1 + nvab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p12b-1),int_mb(k_range+p8b-1),2,1,3,-1.0d0,.false
     &.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_3',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_3',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_3',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_3',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+h1b-1),2,3,1,1.0d0/2.0d0,.
     &false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_3',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_3',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_5_3_1(d_a,k_a_offset,d_b,k_b_offset,d
     &_c,k_c_offset)
C     i3 ( h11 p8 p12 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p8 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p8b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER dummy_p6b_1
      INTEGER h10b_1
      INTEGER h11b_2
      INTEGER h10b_2
      INTEGER p8b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p8b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_3_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h10b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h10b,dummy_p6b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h11b,h10b,p8b,p12b,h11b_2,h10b_2,p8b_2,p12b_
     &2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_3_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_3_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_3_1'
     &,3,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_5_3_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_3_1',5,MA_ERR)
      IF ((h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p12b
     &-1),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (no
     &ab+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+p8b-1),int_mb(k_range+p12b
     &-1),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_3_1'
     &,6,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_3_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_3_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_5_3_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+h11b-1),3,2,1,1.0d0,.false.
     &)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (p8b - noab - 1 + nvab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_3_1'
     &,10,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_5
     &_3_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_12_5_3_1(l_a_offset,k_a_offset,si
     &ze)
C     i3 ( h11 p8 p12 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p8b
      INTEGER p12b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_12_5_3_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p12b = p8b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p12b-1)))) .eq. ieor(irrep_v,irre
     &p_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p12b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p12b - noab - 1 + nvab * (p8b - n
     &oab - 1 + nvab * (h11b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h11b-1)) * dfloat(int_mb(k_range+p8b-1)) * dfloat(int_mb(k
     &_range+p12b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h11 h1 h2 )_vxt + = 1/2 * Sum ( p8 p9 ) * t ( p8 p9 h1 h2 )_t * i2 ( h11 p8 p9 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER h1b
      INTEGER h2b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p9b
      INTEGER p8b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER dummy_p6b_2
      INTEGER h11b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1) .ge. numact - 1)
     & THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. ieor(irrep_v,ieor(
     &irrep_x,irrep_t))) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_6',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+p9b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p8b,p9b,h1b,h2b,p8b_1,p9b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h11b,p8b,p9b,dummy_p6b_2,h11b_2,p8
     &b_2,p9b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_6',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1 + nvab * (p8b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_6',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_6',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h11b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p8b-1),int_mb(k_range+p9b-1),1,3,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_6',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p8b .eq. p9b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_6
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_6
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_6',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h11b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),1,3,2,1.0d0/2.0d0,.f
     &alse.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_6',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_6
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_12_6_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 p8 p9 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h10 h11 p8 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p8b
      INTEGER p9b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER dummy_p6b_1
      INTEGER h10b_1
      INTEGER h11b_2
      INTEGER h10b_2
      INTEGER p8b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h11b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h11b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h11b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p9b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h11b-1) * int_
     &mb(k_range+p8b-1) * int_mb(k_range+p9b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_6_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h10b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h10b,dummy_p6b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h11b,h10b,p8b,p9b,h11b_2,h10b_2,p8b_2,p9b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+p9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_6_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_12_6_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_12_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_6_1',5,MA_ERR)
      IF ((h10b .le. h11b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (noa
     &b+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),4,3,2,1,1.0d0,.false.)
      END IF
      IF ((h11b .lt. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h10b-1),int_mb(k_range+p8b-1),int_mb(k_range+p9b-
     &1),4,3,1,2,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_12_6_1',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_6
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_6
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_12_6_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h11b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p8b - noab - 1 + nvab * (h11b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_12_6_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_12_6
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_12_6_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 p8 p9 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h11b
      INTEGER p8b
      INTEGER p9b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p9b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_12_6_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h11b = 1,noab
      DO p8b = noab+1,noab+nvab
      DO p9b = p8b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h11b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k
     &_spin+p8b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(
     &int_mb(k_sym+p8b-1),int_mb(k_sym+p9b-1)))) .eq. ieor(irrep_v,irrep
     &_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+dumm
     &y_p6b-1)+int_mb(k_spin+p8b-1)+int_mb(k_spin+p9b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p9b - noab - 1 + nvab * (p8b - no
     &ab - 1 + nvab * (h11b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h11b-1)) * dfloat(int_mb(k_range+p8b-1)) * dfloat(int_mb(k
     &_range+p9b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1 * P( 6 ) * Sum ( p7 ) * t ( p4 p7 h1 h2 )_t * i1 ( p5 h3 p7 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER p5b_2
      INTEGER dummy_p6b_2
      INTEGER h3b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h2b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h2b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p7b,h1b,h2b,p4b_1,p7b_1,h1b_1,h2b_1)
      CALL TCE_RESTRICTED_4(p5b,dummy_p6b,h3b,p7b,p5b_2,dummy_p6b_2,h3b_
     &2,p7b_2)
      dim_common = int_mb(k_range+p7b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13',2,MA_ERR)
      IF ((p7b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p7b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h3b_2 - 1 + noab * (p5b_2 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+p7b-1),2,1,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13',6,MA_
     &ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13',9,MA_ERR)
      IF ((p4b .le. p5b) .and. (h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,2,4,3,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p4b .le. p5b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,2,1,4,3,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p4b .le. p5b) .and. (h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,2,4,1,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),2,5,4,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),2,5,1,4,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b) .and. (h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),2,5,4,1,3,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 h1 p7 )_vx + = 1 * Sum ( h8 ) * x ( h8 )_x * v ( h8 p4 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h8b
      INTEGER dummy_p6b_1
      INTEGER h8b_1
      INTEGER p4b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h8b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h8b-1)) .eq. irrep
     &_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h8b,dummy_p6b_1,h8b_1)
      CALL TCE_RESTRICTED_4(p4b,h8b,h1b,p7b,p4b_2,h8b_2,h1b_2,p7b_2)
      dim_common = int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h8b-1)
     &,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_1',5,MA_ERR)
      IF ((h8b .le. p4b) .and. (h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1)
     &,4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_1',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_13_1(l_a_offset,k_a_offset,size)
C     i1 ( p4 h1 p7 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_13_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h1b - 1 
     &+ noab * (p4b - noab - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+dummy_p6b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_
     &range+p7b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 h1 p7 )_vx + = 1/2 * Sum ( h8 h9 ) * x ( p4 h8 h9 )_x * v ( h8 h9 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h1b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h8b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(p4b,dummy_p6b,h8b,h9b,p4b_1,dummy_p6b_1,h8b_
     &1,h9b_1)
      CALL TCE_RESTRICTED_4(h8b,h9b,h1b,p7b,h8b_2,h9b_2,h1b_2,p7b_2)
      dim_common = int_mb(k_range+h8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h1b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),1,3,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_2',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_2',5,MA_ERR)
      IF ((h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1)
     &,4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_2',6,M
     &A_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_2
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_2
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_2',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),3,2,1,1.0d0/2.0d0,.fa
     &lse.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_2',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_2
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 h1 p7 )_vx + = -1 * Sum ( h8 p9 ) * x ( p9 h1 h8 )_x * v ( h8 p4 p7 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER h8b
      INTEGER dummy_p6b_1
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER p4b_2
      INTEGER h8b_2
      INTEGER p7b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p9b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p9b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p9b,h1b,h8b,dummy_p6b_1,p9b_1,h1b_
     &1,h8b_1)
      CALL TCE_RESTRICTED_4(p4b,h8b,p7b,p9b,p4b_2,h8b_2,p7b_2,p9b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_3',2,MA_ERR)
      IF ((h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p9b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),3,2,1,-1.0d0,.false.)
      END IF
      IF ((h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p9b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),2,3,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_3',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_3',5,MA_ERR)
      IF ((h8b .le. p4b) .and. (p9b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p9b-1),int_mb(k_range+p7b-1)
     &,4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((h8b .le. p4b) .and. (p7b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p7b-1),int_mb(k_range+p9b-1)
     &,3,2,1,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_3',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_3
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_3
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_3',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),2,3,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_3',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_3
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_4(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 h1 p7 )_vx + = 1/2 * Sum ( h8 h9 p10 ) * x ( p4 p10 h1 h8 h9 )_x * v ( h8 h9 p7 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_4',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1)+int_mb(k_a
     &ctive+p10b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h8b-1)+int_mb(k_active+
     &h9b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+
     &p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h8b-1)+int_mb(k_sp
     &in+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h8b
     &-1),int_mb(k_sym+h9b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(p4b,dummy_p6b,p10b,h1b,h8b,h9b,p4b_1,dummy_p
     &6b_1,p10b_1,h1b_1,h8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h8b,h9b,p7b,p10b,h8b_2,h9b_2,p7b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_4',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_4',2,MA_ERR)
      IF ((p10b .lt. p4b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p10b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),5,2,4,3,1,-1.0d0,.false.)
      END IF
      IF ((p10b .lt. p4b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p10b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h9b-1),4,2,5,3,1,1.0d0,.false.)
      END IF
      IF ((p10b .lt. p4b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p10b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+h9b-1),3,2,5,4,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h8b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1
     &),int_mb(k_range+h1b-1),5,1,4,3,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b) .and. (h8b .lt. h1b) .and. (h1b .le. h9b)) THE
     &N
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h8b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h9b-1),4,1,5,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p10b) .and. (h1b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p4b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h8b-1
     &),int_mb(k_range+h9b-1),3,1,5,4,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_4',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_4',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_4',5,MA_ERR)
      IF ((p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),4,2,1,3,-1.0d0,.false.)
      END IF
      IF ((p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),3,2,1,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_4',6,M
     &A_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_4
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_4
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_4',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),3,2,1,1.0d0/2.0d0,.fa
     &lse.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_4',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_4
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_5(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 h1 p7 )_vxt + = 1 * Sum ( p8 ) * t ( p8 h1 )_t * i2 ( p4 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER p4b_2
      INTEGER dummy_p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,ieor(i
     &rrep_x,irrep_t))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h1b,p8b_1,h1b_1)
      CALL TCE_RESTRICTED_4(p4b,dummy_p6b,p7b,p8b,p4b_2,dummy_p6b_2,p7b_
     &2,p8b_2)
      dim_common = int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * 
     &int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_5',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5',5,MA_ERR)
      IF ((p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (p4b_2 - noab - 1)
     &)))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),3,1,2,-1.0d0,.false.)
      END IF
      IF ((p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p4b_2 - noab - 1)
     &)))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),2,1,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_5',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),2,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_5',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_5_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( p4 p7 p8 )_vx + = -1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 p4 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER h9b_1
      INTEGER p4b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h9b-1)) .eq. irrep
     &_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h9b,dummy_p6b_1,h9b_1)
      CALL TCE_RESTRICTED_4(p4b,h9b,p7b,p8b,p4b_2,h9b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_5_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5_1',5,MA_ERR)
      IF ((h9b .le. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_5_1',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p4b-1),3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_5_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_13_5_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( p4 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p7b
      INTEGER p8b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_13_5_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p8b - noab - 1 + nvab * (p7b - no
     &ab - 1 + nvab * (p4b - noab - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+dummy_p6b-1)) * dfloat(int_mb(k_range+p7b-1)) * dfloat(int_mb(k_
     &range+p8b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_5_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( p4 p7 p8 )_vx + = -1/2 * Sum ( h9 h10 ) * x ( p4 h9 h10 )_x * v ( h9 h10 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER h10b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(p4b,dummy_p6b,h9b,h10b,p4b_1,dummy_p6b_1,h9b
     &_1,h10b_1)
      CALL TCE_RESTRICTED_4(h9b,h10b,p7b,p8b,h9b_2,h10b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),1,3,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_5_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_5_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_5_2',6
     &,MA_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_5_2',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p4b-1),3,2,1,-1.0d0/2.0d0,.f
     &alse.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_5_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_5
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_6(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 h1 p7 )_vxt + = 1 * Sum ( h9 p8 ) * t ( p4 p8 h1 h9 )_t * i2 ( h9 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER dummy_p6b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,ieor(i
     &rrep_x,irrep_t))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_6',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h
     &1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(
     &k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p8b,h1b,h9b,p4b_1,p8b_1,h1b_1,h9b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h9b,p7b,p8b,dummy_p6b_2,h9b_2,p7b_
     &2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_6',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_6',2,MA_ERR)
      IF ((p8b .lt. p4b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p8b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,4,2,3,1,1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noab - 1 + nvab * (p8b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,3,2,4,1,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p8b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1)
     &,4,1,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p8b) .and. (h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1)
     &,3,1,4,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_6',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_6',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_6',5,MA_ERR)
      IF ((p8b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p8b_2 - noab - 1 + nvab * (h9b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p7b-1),3,1,2,-1.0d0,.false.)
      END IF
      IF ((p7b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h9b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),2,1,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_6',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_6
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_6
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_6',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+p4b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_6',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_6
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_13_6_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h9 p7 p8 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h9 h10 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h9b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER dummy_p6b_1
      INTEGER h10b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h9b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h9b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h9b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h9b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_6_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h10b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h10b,dummy_p6b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h9b,h10b,p7b,p8b,h9b_2,h10b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_6_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_6_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_13_6_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_13_6_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_6_1',5,MA_ERR)
      IF ((h10b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((h9b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_13_6_1',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_6
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_6
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_13_6_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h9b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (h9b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_13_6_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_13_6
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_13_6_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h9 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h9b
      INTEGER p7b
      INTEGER p8b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h9b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_13_6_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h9b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p8b - noab - 1 + nvab * (p7b - no
     &ab - 1 + nvab * (h9b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h9b-1)) * dfloat(int_mb(k_range+p7b-1)) * dfloat(int_mb(k_
     &range+p8b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_14(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = 1/4 * Sum ( h7 h8 ) * t ( p4 p5 h7 h8 )_t * i1 ( h7 h8 h1 h2 h3 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER h7b_1
      INTEGER h8b_1
      INTEGER dummy_p6b_2
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER h1b_2
      INTEGER h2b_2
      INTEGER h3b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_14',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h7b = 1,noab
      DO h8b = h7b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1) .eq. int_mb(k_spin+h
     &7b-1)+int_mb(k_spin+h8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+h7b-1),int_mb(k_sym+h8b-1)))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_4(p4b,p5b,h7b,h8b,p4b_1,p5b_1,h7b_1,h8b_1)
      CALL TCE_RESTRICTED_6(dummy_p6b,h7b,h8b,h1b,h2b,h3b,dummy_p6b_2,h7
     &b_2,h8b_2,h1b_2,h2b_2,h3b_2)
      dim_common = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_14',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_14',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h7b_1 - 1 + noab * (p5b_1 - noab - 1 + nvab * (p4b_
     &1 - noab - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1)
     &,2,1,4,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_14',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_14',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_14',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(h3b_2
     & - 1 + noab * (h2b_2 - 1 + noab * (h1b_2 - 1 + noab * (h8b_2 - 1 +
     & noab * (h7b_2 - 1))))))
      CALL TCE_SORT_6(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+dummy_
     &p6b-1),int_mb(k_range+h7b-1),int_mb(k_range+h8b-1),int_mb(k_range+
     &h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,1,3,2,1.0
     &d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_14',6,MA_
     &ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h7b .eq. h8b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_14',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_14',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_14',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,1.0d0/4.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_14',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_14',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_14_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h7 h8 h1 h2 h3 )_vx + = 1 * Sum ( p9 p10 ) * x ( p9 p10 h1 h2 h3 )_x * v ( h7 h8 p9 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p10b
      INTEGER dummy_p6b_1
      INTEGER p9b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h7b_2
      INTEGER h8b_2
      INTEGER p9b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h7b-1)+int_mb(k_spin+
     &h8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h7b-1),ieor(i
     &nt_mb(k_sym+h8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h7b-1) * int_m
     &b(k_range+h8b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_14_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      DO p10b = p9b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1)+int_mb(k_active+p9b-1)+int_mb(k_a
     &ctive+p10b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p9b-1)+int_mb(k_spin+
     &p10b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_sp
     &in+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p9b-1),ieor(i
     &nt_mb(k_sym+p10b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b
     &-1),int_mb(k_sym+h3b-1)))))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_6(dummy_p6b,p9b,p10b,h1b,h2b,h3b,dummy_p6b_1,p
     &9b_1,p10b_1,h1b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_4(h7b,h8b,p9b,p10b,h7b_2,h8b_2,p9b_2,p10b_2)
      dim_common = int_mb(k_range+p9b-1) * int_mb(k_range+p10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1) * 
     &int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h7b-1) * int_mb(k_range+h8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_14_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_14_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - no
     &ab - 1 + nvab * (p9b_1 - noab - 1))))))
      CALL TCE_SORT_5(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p10b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1
     &),int_mb(k_range+h3b-1),5,4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_14_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_14_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_14_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p9b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h7b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p9b-1),int_mb(k_range+p10b-1
     &),2,1,4,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_14_1',6,M
     &A_ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p9b .eq. p10b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_14_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_14_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_14_1',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h7b-1),int_mb(k_range+h3b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h1b-1),2,1,5,4,3,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (h8b - 1 + noab * 
     &(h7b - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_14_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_14_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_14_1(l_a_offset,k_a_offset,size)
C     i1 ( h7 h8 h1 h2 h3 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h7b
      INTEGER h8b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_14_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h7b = 1,noab
      DO h8b = h7b,noab
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+h7b-1),ieor(int_mb(k_sym+h8b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h7b-1)+int_mb(k_spin+h8b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(h3b - 1 + noab * (h2b - 1 + noab 
     &* (h1b - 1 + noab * (h8b - 1 + noab * (h7b - 1)))))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h7b-1)) * dfloat(int_mb(k_range+h8b-1)) * dfloat(int_mb(k_
     &range+h1b-1)) * dfloat(int_mb(k_range+h2b-1)) * dfloat(int_mb(k_ra
     &nge+h3b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_15(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_fxt + = -1 * Sum ( p12 ) * t ( p4 p5 p12 h1 h2 h3 )_t * i1 ( p12 )_fx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p12b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER p12b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER dummy_p6b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_f,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &p12b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p12b-1
     &) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b
     &-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p12b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),in
     &t_mb(k_sym+h3b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p4b,p5b,p12b,h1b,h2b,h3b,p4b_1,p5b_1,p12b_1,
     &h1b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_2(dummy_p6b,p12b,dummy_p6b_2,p12b_2)
      dim_common = int_mb(k_range+p12b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15',2,MA_ERR)
      IF ((p12b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p12b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p12b-1
     &),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,3,2,1,1.0d0,.f
     &alse.)
      END IF
      IF ((p4b .le. p12b) .and. (p12b .lt. p5b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p12b_1 - noab - 1 + nvab * (p4b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p12b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,3,1,2,-1.0d0,.
     &false.)
      END IF
      IF ((p5b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p12b_1 - no
     &ab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1))))))
     &)
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p12b-1),int_mb(k_range+h1b-1
     &),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,2,1,3,1.0d0,.f
     &alse.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_15',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - noab - 1))
      CALL TCE_SORT_1(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p12b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_15',6,MA_
     &ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_15',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_15_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p12 )_fx + = 1 * Sum ( h11 ) * x ( h11 )_x * i2 ( h11 p12 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h11b
      INTEGER dummy_p6b_1
      INTEGER h11b_1
      INTEGER h11b_2
      INTEGER p12b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+p12b-1).ne.4)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+p12b-1)) .eq. ieor
     &(irrep_f,irrep_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h11b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h11b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h11b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h11b,dummy_p6b_1,h11b_1)
      CALL TCE_RESTRICTED_2(h11b,p12b,h11b_2,p12b_2)
      dim_common = int_mb(k_range+h11b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h11b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_15_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - noab - 1 + nvab * (h11b_2 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p12b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_15_1',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1',9,MA_ERR)
      CALL TCE_SORT_1(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_15_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_15_1(l_a_offset,k_a_offset,size)
C     i1 ( p12 )_fx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER p12b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+p12b-1)) .eq. ieor
     &(irrep_f,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+p12b-1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_15_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+p12b-1)) .eq. ieor
     &(irrep_f,irrep_x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+p12b-1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p12b - noab - 1)
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+p12b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_15_1_1(d_a,k_a_offset,d_c,k_c_offset)
C     i2 ( h11 p12 )_f + = 1 * f ( h11 p12 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p12b
      INTEGER dimc
      INTEGER h11b_1
      INTEGER p12b_1
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p12b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p12b-1)) .eq. irrep_f) 
     &THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p12b-1)
      CALL TCE_RESTRICTED_2(h11b,p12b,h11b_1,p12b_1)
      dim_common = 1
      dima_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p12b-1)
      dima = dim_common * dima_sort
      IF (dima .gt. 0) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_1_1',0,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1_1',1,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(p12b_
     &1 - 1 + (noab+nvab) * (h11b_1 - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+p12b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_15_1_1',2
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1_1',3,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_a_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h11b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_15_1_1',4
     &,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_1
     &_1',5,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_15_1_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h11 p12 )_f
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER h11b
      INTEGER p12b
      DOUBLE PRECISION size
      length = 0
      DO h11b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p12b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p12b
     &-1).ne.4)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_15_1_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO h11b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p12b-1)) .eq. irrep_f) 
     &THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p12b
     &-1).ne.4)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p12b - noab - 1 + nvab * (h11b - 
     &1))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+h11b-1)) * dfloat(int_mb(k_ran
     &ge+p12b-1))
      END IF
      END IF
      END IF
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_15_1_2(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h11 p12 )_vt + = 1 * Sum ( h9 p8 ) * t ( p8 h9 )_t * v ( h9 h11 p8 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER h11b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p8b
      INTEGER h9b
      INTEGER p8b_1
      INTEGER h9b_1
      INTEGER h11b_2
      INTEGER h9b_2
      INTEGER p12b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO h11b = 1,noab
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h11b-1)+int_mb(k_spin+p12b
     &-1).ne.4)) THEN
      IF (int_mb(k_spin+h11b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+h11b-1),int_mb(k_sym+p12b-1)) .eq. ieor(irre
     &p_v,irrep_t)) THEN
      dimc = int_mb(k_range+h11b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_1_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p8b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p8b-1),int_mb(k_sym+h9b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p8b,h9b,p8b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h11b,h9b,p12b,p8b,h11b_2,h9b_2,p12b_2,p8b_2)
      dim_common = int_mb(k_range+p8b-1) * int_mb(k_range+h9b-1)
      dima_sort = 1
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h11b-1) * int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_1_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (p8b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_15_1_2',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_1_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1_2',5,MA_ERR)
      IF ((h9b .le. h11b) .and. (p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p8b-1),int_mb(k_range+p12b-
     &1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h9b .le. h11b) .and. (p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h11b_2 - 1 + (no
     &ab+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h11b-1),int_mb(k_range+p12b-1),int_mb(k_range+p8b-
     &1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p8b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p8b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p8b-1),int_mb(k_range+p12b-
     &1),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h11b .lt. h9b) .and. (p12b .lt. p8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h11b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h11b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p8b-
     &1),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_15_1_2',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_1
     &_2',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_1
     &_2',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_1_2',9,MA_ERR)
      CALL TCE_SORT_2(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),int_mb(k_range+h11b-1),2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1 + nvab * (h11b - 1)))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_15_1_2',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_1
     &_2',11,MA_ERR)
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_15_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p12 )_vx + = 1/2 * Sum ( h8 h9 p10 ) * x ( p10 h8 h9 )_x * v ( h8 h9 p10 p12 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p12b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h8b
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h8b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p12b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p12b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+p12b-1).ne.4)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+p12b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+p12b-1)) .eq. ieor
     &(irrep_v,irrep_x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+p12b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h8b = 1,noab
      DO h9b = h8b,noab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k
     &_spin+h8b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p10b-1),ieor(
     &int_mb(k_sym+h8b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p10b,h8b,h9b,dummy_p6b_1,p10b_1,h8
     &b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h8b,h9b,p12b,p10b,h8b_2,h9b_2,p12b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h8b-1) * int_
     &mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p12b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+h9b-1),3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_15_2',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_15_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_2',5,MA_ERR)
      IF ((p10b .le. p12b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p12b_
     &2 - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p12b-
     &1),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((p12b .lt. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p12b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (no
     &ab+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p12b-1),int_mb(k_range+p10b-
     &1),3,2,1,4,-1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_15_2',6,M
     &A_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h8b .eq. h9b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_2
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_2
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_15_2',9,MA_ERR)
      CALL TCE_SORT_1(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p12b-1
     &),1,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p12b 
     &- noab - 1))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_15_2',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_15_2
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_16(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1 * P( 3 ) * Sum ( h8 p7 ) * t ( p4 p5 p7 h1 h2 h8 )_t * i1 ( h8 h3 p7 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER h8b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER p7b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h8b_1
      INTEGER dummy_p6b_2
      INTEGER h8b_2
      INTEGER h3b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = 1,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO h8b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &p7b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h8b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p7b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h8b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h8b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p4b,p5b,p7b,h1b,h2b,h8b,p4b_1,p5b_1,p7b_1,h1
     &b_1,h2b_1,h8b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h8b,h3b,p7b,dummy_p6b_2,h8b_2,h3b_
     &2,p7b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+h8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h3b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16',2,MA_ERR)
      IF ((p7b .lt. p4b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,3,2,4,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p7b .lt. p4b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,4,3,2,5,1,-1.0d0,.f
     &alse.)
      END IF
      IF ((p7b .lt. p4b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,4,3,2,6,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,3,1,4,2,-1.0d0,.f
     &alse.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (h1b .le. h8b) .and.
     & (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,4,3,1,5,2,1.0d0,.fa
     &lse.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p5b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,4,3,1,6,2,-1.0d0,.f
     &alse.)
      END IF
      IF ((p5b .le. p7b) .and. (h8b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (h8b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),6,5,2,1,4,3,1.0d0,.fa
     &lse.)
      END IF
      IF ((p5b .le. p7b) .and. (h1b .le. h8b) .and. (h8b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h2b_1
     & - 1 + noab * (h8b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h2b-1),6,4,2,1,5,3,-1.0d0,.f
     &alse.)
      END IF
      IF ((p5b .le. p7b) .and. (h2b .le. h8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h8b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p7b_1 - noa
     &b - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h8b-1),5,4,2,1,6,3,1.0d0,.fa
     &lse.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_16',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (h3b_2 - 1 + noab * (h8b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+p7b-1),2,1,3,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_16',6,MA_
     &ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16',9,MA_ERR)
      IF ((h2b .le. h3b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h3b .le. h1b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,1,3,2,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h1b - 1 + noab * (h3b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((h1b .le. h3b) .and. (h3b .le. h2b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,1,2,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h2b -
     & 1 + noab * (h3b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_16',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_16_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h8 h1 p7 )_vx + = -1 * Sum ( h9 ) * x ( h9 )_x * v ( h8 h9 h1 p7 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER h1b_2
      INTEGER p7b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h8b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h9b-1)) .eq. irrep
     &_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h9b,dummy_p6b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h8b,h9b,h1b,p7b,h8b_2,h9b_2,h1b_2,p7b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_16_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_1',5,MA_ERR)
      IF ((h9b .lt. h8b) .and. (h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noab
     &+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1)
     &,4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((h8b .le. h9b) .and. (h1b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (h1b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+p7b-1)
     &,4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_16_1',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h8b-1),3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h8b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_16_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_16_1(l_a_offset,k_a_offset,size)
C     i1 ( h8 h1 p7 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER h1b
      INTEGER p7b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_16_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p7b - noab - 1 + nvab * (h1b - 1 
     &+ noab * (h8b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h8b-1)) * dfloat(int_mb(k_range+h1b-1)) * dfloat(int_mb(k_
     &range+p7b-1))
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_16_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h8 h1 p7 )_vx + = 1 * Sum ( h9 p10 ) * x ( p10 h1 h9 )_x * v ( h8 h9 p7 p10 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p10b
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER p10b_1
      INTEGER h1b_1
      INTEGER h9b_1
      INTEGER h8b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p10b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h8b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p10b = noab+1,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+p10b-1) .eq. int_mb(k
     &_spin+h1b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+p10b-1),ieor(
     &int_mb(k_sym+h1b-1),int_mb(k_sym+h9b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(dummy_p6b,p10b,h1b,h9b,dummy_p6b_1,p10b_1,h1
     &b_1,h9b_1)
      CALL TCE_RESTRICTED_4(h8b,h9b,p7b,p10b,h8b_2,h9b_2,p7b_2,p10b_2)
      dim_common = int_mb(k_range+p10b-1) * int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_2',2,MA_ERR)
      IF ((h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),3,2,1,-1.0d0,.false.
     &)
      END IF
      IF ((h1b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h1b_1 - 1 + noab * (p10b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p10b-1
     &),int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),2,3,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_16_2',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_2',5,MA_ERR)
      IF ((h9b .lt. h8b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),4,2,1,3,1.0d0,.false.)
      END IF
      IF ((h9b .lt. h8b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),3,2,1,4,-1.0d0,.false.)
      END IF
      IF ((h8b .le. h9b) .and. (p10b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - 1 + (noab+nvab) * (p10b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p10b-1),int_mb(k_range+p7b-1
     &),4,1,2,3,-1.0d0,.false.)
      END IF
      IF ((h8b .le. h9b) .and. (p7b .le. p10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p10b_
     &2 - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p10b-1
     &),3,1,2,4,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_16_2',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_2
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_2
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_2',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),2,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h8b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_16_2',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_2
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_16_3(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h8 h1 p7 )_vxt + = 1 * Sum ( p9 ) * t ( p9 h1 )_t * i2 ( h8 p7 p9 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER h1b
      INTEGER p7b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p9b
      INTEGER p9b_1
      INTEGER h1b_1
      INTEGER dummy_p6b_2
      INTEGER h8b_2
      INTEGER p7b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO h1b = 1,noab
      DO p7b = noab+1,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h8b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+p7b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_active+h1b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_
     &spin+h1b-1)+int_mb(k_spin+p7b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h8b-1),ieor(i
     &nt_mb(k_sym+h1b-1),int_mb(k_sym+p7b-1)))) .eq. ieor(irrep_v,ieor(i
     &rrep_x,irrep_t))) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+h1b-1) * int_mb(k_range+p7b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_3',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p9b = noab+1,noab+nvab
      IF (int_mb(k_spin+p9b-1) .eq. int_mb(k_spin+h1b-1)) THEN
      IF (ieor(int_mb(k_sym+p9b-1),int_mb(k_sym+h1b-1)) .eq. irrep_t) TH
     &EN
      CALL TCE_RESTRICTED_2(p9b,h1b,p9b_1,h1b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h8b,p7b,p9b,dummy_p6b_2,h8b_2,p7b_
     &2,p9b_2)
      dim_common = int_mb(k_range+p9b-1)
      dima_sort = int_mb(k_range+h1b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h8b-1) * 
     &int_mb(k_range+p7b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_3',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_3',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h1b_1
     & - 1 + noab * (p9b_1 - noab - 1)))
      CALL TCE_SORT_2(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p9b-1)
     &,int_mb(k_range+h1b-1),2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_16_3',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_3',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_3',5,MA_ERR)
      IF ((p9b .lt. p7b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p7b_2
     & - noab - 1 + nvab * (p9b_2 - noab - 1 + nvab * (h8b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p9b-1),int_mb(k_range+p7b-1),3,1,2,-1.0d0,.false.)
      END IF
      IF ((p7b .le. p9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h8b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p9b-1),2,1,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_16_3',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_3
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_3
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_3',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p7b-1)
     &,int_mb(k_range+h8b-1),int_mb(k_range+h1b-1),2,3,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p7b -
     & noab - 1 + nvab * (h1b - 1 + noab * (h8b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_16_3',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_3
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_16_3_1(d_a,k_a_offset,d_b,k_b_offset,d_c
     &,k_c_offset)
C     i2 ( h8 p7 p9 )_vx + = 1 * Sum ( h10 ) * x ( h10 )_x * v ( h8 h10 p7 p9 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER p7b
      INTEGER p9b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER dummy_p6b_1
      INTEGER h10b_1
      INTEGER h8b_2
      INTEGER h10b_2
      INTEGER p7b_2
      INTEGER p9b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p9b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h8b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p9b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h8b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h8b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p9b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h8b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p9b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_3_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h10b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h10b,dummy_p6b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h8b,h10b,p7b,p9b,h8b_2,h10b_2,p7b_2,p9b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h8b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+p9b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_3_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_3_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_16_3_1',3
     &,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_16_3_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_3_1',5,MA_ERR)
      IF ((h10b .lt. h8b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h8b_2 - 1 + (noab
     &+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h8b-1),int_mb(k_range+p7b-1),int_mb(k_range+p9b-1
     &),4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((h8b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p9b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h8b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h8b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p9b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_16_3_1',6
     &,MA_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_3
     &_1',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_3
     &_1',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_16_3_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p9b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h8b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p9b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (h8b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_16_3_1',1
     &0,MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_16_3
     &_1',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_16_3_1(l_a_offset,k_a_offset,size
     &)
C     i2 ( h8 p7 p9 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h8b
      INTEGER p7b
      INTEGER p9b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p9b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p9b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p9b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_16_3_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h8b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p9b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p9b-1)) THEN
      IF (ieor(int_mb(k_sym+h8b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p9b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h8b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p9b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p9b - noab - 1 + nvab * (p7b - no
     &ab - 1 + nvab * (h8b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h8b-1)) * dfloat(int_mb(k_range+p7b-1)) * dfloat(int_mb(k_
     &range+p9b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_17(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = 1/2 * P( 2 ) * Sum ( p7 p8 ) * t ( p4 p7 p8 h1 h2 h3 )_t * i1 ( p5 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER p4b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER p5b_2
      INTEGER dummy_p6b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p7b-1)+int_mb(k_active+
     &p8b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1)
     & .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spin+h3b-
     &1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p7b-1),ieor(int_mb(
     &k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-1),int
     &_mb(k_sym+h3b-1)))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_6(p4b,p7b,p8b,h1b,h2b,h3b,p4b_1,p7b_1,p8b_1,h1
     &b_1,h2b_1,h3b_1)
      CALL TCE_RESTRICTED_4(p5b,dummy_p6b,p7b,p8b,p5b_2,dummy_p6b_2,p7b_
     &2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+h1b-1) * int_mb
     &(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p5b-1) * int_mb(k_range+dummy_p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17',2,MA_ERR)
      IF ((p8b .lt. p4b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p4b_1 - noa
     &b - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,3,2,1,1.0d0,.fa
     &lse.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,2,3,1,-1.0d0,.f
     &alse.)
      END IF
      IF ((p4b .le. p7b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (p8b_1 - noa
     &b - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))
      CALL TCE_SORT_6(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h3b-1),6,5,4,1,3,2,1.0d0,.fa
     &lse.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_17',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (p5b_2 - noab - 1)
     &)))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),1,3,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_17',6,MA_
     &ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17',9,MA_ERR)
      IF ((p4b .le. p5b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),5,1,4,3,2,1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      END IF
      IF ((p5b .le. p4b)) THEN
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h3b-1),int_mb(k_range+h2b-1),int_mb(k_range+h1b-1)
     &,int_mb(k_range+p4b-1),1,5,4,3,2,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p4b - noab - 1 + 
     &nvab * (p5b - noab - 1))))))
      END IF
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_17',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_17_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 p7 p8 )_vx + = 1 * Sum ( h9 ) * x ( h9 )_x * v ( h9 p4 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER p4b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER dummy_p6b_1
      INTEGER h9b_1
      INTEGER p4b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO p4b = noab+1,noab+nvab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h9b-1)) .eq. irrep
     &_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h9b,dummy_p6b_1,h9b_1)
      CALL TCE_RESTRICTED_4(p4b,h9b,p7b,p8b,p4b_2,h9b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+h9b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h9b-1)
     &,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_17_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17_1',5,MA_ERR)
      IF ((h9b .le. p4b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (p4b_2 - 1 + (noab
     &+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,4,3,2,1,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_17_1',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p4b-1),3,2,1,1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_17_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_17_1(l_a_offset,k_a_offset,size)
C     i1 ( p4 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p7b
      INTEGER p8b
      DOUBLE PRECISION size
      length = 0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_17_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p8b - noab - 1 + nvab * (p7b - no
     &ab - 1 + nvab * (p4b - noab - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+p4b-1)) * dfloat(int_mb(k_rang
     &e+dummy_p6b-1)) * dfloat(int_mb(k_range+p7b-1)) * dfloat(int_mb(k_
     &range+p8b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_17_2(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( p4 p7 p8 )_vx + = 1/2 * Sum ( h9 h10 ) * x ( p4 h9 h10 )_x * v ( h9 h10 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER dummy_p6b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h9b
      INTEGER h10b
      INTEGER p4b_1
      INTEGER dummy_p6b_1
      INTEGER h9b_1
      INTEGER h10b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsubh(2)
      INTEGER isubh
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+dummy_p6b-1) .ge. numac
     &t - 1) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17_2',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h9b = 1,noab
      DO h10b = h9b,noab
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+h9b-1)+int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+h9b-1),int_mb(k_sym+h10b-1)))) .eq. irrep_x) THEN
      CALL TCE_RESTRICTED_4(p4b,dummy_p6b,h9b,h10b,p4b_1,dummy_p6b_1,h9b
     &_1,h10b_1)
      CALL TCE_RESTRICTED_4(h9b,h10b,p7b,p8b,h9b_2,h10b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+h9b-1) * int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17_2',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17_2',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1 + noab * (h9b_1 - 1 + noab * (p4b_1 - noab - 1))))
      CALL TCE_SORT_3(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h10b-1),1,3,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_17_2',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_17_2',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17_2',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),4,3,2,1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_17_2',6,M
     &A_ERR)
      nsubh(1) = 1
      nsubh(2) = 1
      isubh = 1
      IF (h9b .eq. h10b) THEN
      nsubh(isubh) = nsubh(isubh) + 1
      ELSE
      isubh = isubh + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsubh(1))/FACTORIAL(nsubh(2)),dbl_mb(k_a_sort),dim_common,dbl_
     &mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17_2
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17_2
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_17_2',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p4b-1),3,2,1,1.0d0/2.0d0,.fa
     &lse.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (p4b - noab - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_17_2',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_17_2
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_18(d_a,k_a_offset,d_b,k_b_offset,d_c,k_c
     &_offset)
C     i0 ( p4 p5 h1 h2 h3 )_vxt + = -1/2 * Sum ( h9 p7 p8 ) * t ( p4 p5 p7 p8 h1 h2 h3 h9 )_t * i1 ( h9 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER p4b
      INTEGER p5b
      INTEGER dummy_p6b
      INTEGER h1b
      INTEGER h2b
      INTEGER h3b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER p7b
      INTEGER p8b
      INTEGER h9b
      INTEGER p4b_1
      INTEGER p5b_1
      INTEGER p7b_1
      INTEGER p8b_1
      INTEGER h1b_1
      INTEGER h2b_1
      INTEGER h3b_1
      INTEGER h9b_1
      INTEGER dummy_p6b_2
      INTEGER h9b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER nsuperp(2)
      INTEGER isuperp
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      DOUBLE PRECISION FACTORIAL
      EXTERNAL FACTORIAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO p4b = noab+1,noab+nvab
      DO p5b = p4b,noab+nvab
      DO dummy_p6b = dummy,dummy
      DO h1b = 1,noab
      DO h2b = h1b,noab
      DO h3b = h2b,noab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1
     &)+int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h1b-1)+int_mb(k_spin+h2
     &b-1)+int_mb(k_spin+h3b-1).ne.12)) THEN
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &dummy_p6b-1) .ge. numact) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1) .ge. numact) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+dummy_
     &p6b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-1)+int_mb(k_spi
     &n+h3b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h1b-1),ieor(int_mb(k_sym+h2b-
     &1),int_mb(k_sym+h3b-1)))))) .eq. ieor(irrep_v,ieor(irrep_x,irrep_t
     &))) THEN
      dimc = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb(k_ra
     &nge+dummy_p6b-1) * int_mb(k_range+h1b-1) * int_mb(k_range+h2b-1) *
     & int_mb(k_range+h3b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_18',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      DO h9b = 1,noab
      IF (int_mb(k_active+p4b-1)+int_mb(k_active+p5b-1)+int_mb(k_active+
     &p7b-1)+int_mb(k_active+p8b-1) .ge. numacq) THEN
      IF (int_mb(k_active+h1b-1)+int_mb(k_active+h2b-1)+int_mb(k_active+
     &h3b-1)+int_mb(k_active+h9b-1) .ge. numacq) THEN
      IF (int_mb(k_spin+p4b-1)+int_mb(k_spin+p5b-1)+int_mb(k_spin+p7b-1)
     &+int_mb(k_spin+p8b-1) .eq. int_mb(k_spin+h1b-1)+int_mb(k_spin+h2b-
     &1)+int_mb(k_spin+h3b-1)+int_mb(k_spin+h9b-1)) THEN
      IF (ieor(int_mb(k_sym+p4b-1),ieor(int_mb(k_sym+p5b-1),ieor(int_mb(
     &k_sym+p7b-1),ieor(int_mb(k_sym+p8b-1),ieor(int_mb(k_sym+h1b-1),ieo
     &r(int_mb(k_sym+h2b-1),ieor(int_mb(k_sym+h3b-1),int_mb(k_sym+h9b-1)
     &))))))) .eq. irrep_t) THEN
      CALL TCE_RESTRICTED_8(p4b,p5b,p7b,p8b,h1b,h2b,h3b,h9b,p4b_1,p5b_1,
     &p7b_1,p8b_1,h1b_1,h2b_1,h3b_1,h9b_1)
      CALL TCE_RESTRICTED_4(dummy_p6b,h9b,p7b,p8b,dummy_p6b_2,h9b_2,p7b_
     &2,p8b_2)
      dim_common = int_mb(k_range+p7b-1) * int_mb(k_range+p8b-1) * int_m
     &b(k_range+h9b-1)
      dima_sort = int_mb(k_range+p4b-1) * int_mb(k_range+p5b-1) * int_mb
     &(k_range+h1b-1) * int_mb(k_range+h2b-1) * int_mb(k_range+h3b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+dummy_p6b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_18',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_18',2,MA_ERR)
      IF ((p8b .lt. p4b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,6,4,3,5,2,1,-1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,5,4,3,6,2,1,1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (h2b .le. h9b) .and. (h9b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),8,6,5,4,3,7,2,1,-1.0d0,.false.)
      END IF
      IF ((p8b .lt. p4b) .and. (h3b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p4b_1 - noab - 1 + nvab * (p8b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p8b-1),int_mb(k_range+p4b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),7,6,5,4,3,8,2,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b) .and. (p8b .lt. p5b) .and.
     & (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,6,4,2,5,3,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b) .and. (p8b .lt. p5b) .and.
     & (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,5,4,2,6,3,1,-1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b) .and. (p8b .lt. p5b) .and.
     & (h2b .le. h9b) .and. (h9b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),8,6,5,4,2,7,3,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p4b .le. p8b) .and. (p8b .lt. p5b) .and.
     & (h3b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),7,6,5,4,2,8,3,1,-1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p5b .le. p8b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,6,3,2,5,4,1,-1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p5b .le. p8b) .and. (h1b .le. h9b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,5,3,2,6,4,1,1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p5b .le. p8b) .and. (h2b .le. h9b) .and.
     & (h9b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),8,6,5,3,2,7,4,1,-1.0d0,.false.)
      END IF
      IF ((p7b .lt. p4b) .and. (p5b .le. p8b) .and. (h3b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p4b
     &_1 - noab - 1 + nvab * (p7b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p7b-1)
     &,int_mb(k_range+p4b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),7,6,5,3,2,8,4,1,1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p8b .lt. p5b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,6,4,1,5,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p8b .lt. p5b) .and. (h1b .le. h9b) .and.
     & (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,5,4,1,6,3,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p8b .lt. p5b) .and. (h2b .le. h9b) .and.
     & (h9b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),8,6,5,4,1,7,3,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p8b .lt. p5b) .and. (h3b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p5b_1 - noab - 1 + nvab * (p8b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),7,6,5,4,1,8,3,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b) .and.
     & (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,6,3,1,5,4,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b) .and.
     & (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,5,3,1,6,4,2,-1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b) .and.
     & (h2b .le. h9b) .and. (h9b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),8,6,5,3,1,7,4,2,1.0d0,.false.)
      END IF
      IF ((p4b .le. p7b) .and. (p7b .lt. p5b) .and. (p5b .le. p8b) .and.
     & (h3b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p5b_1 - noab - 1 + nvab * (p7b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p5b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),7,6,5,3,1,8,4,2,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p7b) .and. (h9b .lt. h1b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 + noab * (h9b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h9b-1),int_mb(k_range+h1b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,6,2,1,5,4,3,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p7b) .and. (h1b .le. h9b) .and. (h9b .lt. h2b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h2b_1 - 1 + noab * (h9b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h9b-1),int_mb(k_range+h2b-1)
     &,int_mb(k_range+h3b-1),8,7,5,2,1,6,4,3,1.0d0,.false.)
      END IF
      IF ((p5b .le. p7b) .and. (h2b .le. h9b) .and. (h9b .lt. h3b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h3b_1
     & - 1 + noab * (h9b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h3b-1),8,6,5,2,1,7,4,3,-1.0d0,.false.)
      END IF
      IF ((p5b .le. p7b) .and. (h3b .le. h9b)) THEN
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h9b_1
     & - 1 + noab * (h3b_1 - 1 + noab * (h2b_1 - 1 + noab * (h1b_1 - 1 +
     & noab * (p8b_1 - noab - 1 + nvab * (p7b_1 - noab - 1 + nvab * (p5b
     &_1 - noab - 1 + nvab * (p4b_1 - noab - 1)))))))))
      CALL TCE_SORT_8(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+p4b-1)
     &,int_mb(k_range+p5b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1)
     &,int_mb(k_range+h1b-1),int_mb(k_range+h2b-1),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h9b-1),7,6,5,2,1,8,4,3,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_18',3,MA_
     &ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_18',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_18',5,MA_ERR)
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - noab - 1 + nvab * (p7b_2 - noab - 1 + nvab * (h9b_2 - 1))))
      CALL TCE_SORT_3(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+p8b-1),1,3,2,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_18',6,MA_
     &ERR)
      nsuperp(1) = 1
      nsuperp(2) = 1
      isuperp = 1
      IF (p7b .eq. p8b) THEN
      nsuperp(isuperp) = nsuperp(isuperp) + 1
      ELSE
      isuperp = isuperp + 1
      END IF
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,2.0d0/FACTOR
     &IAL(nsuperp(1))/FACTORIAL(nsuperp(2)),dbl_mb(k_a_sort),dim_common,
     &dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_18',
     &7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_18',
     &8,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_18',9,MA_ERR)
      CALL TCE_SORT_5(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+h3b-1)
     &,int_mb(k_range+h2b-1),int_mb(k_range+h1b-1),int_mb(k_range+p5b-1)
     &,int_mb(k_range+p4b-1),5,4,3,2,1,-1.0d0/2.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(h3b -
     & 1 + noab * (h2b - 1 + noab * (h1b - 1 + noab * (p5b - noab - 1 + 
     &nvab * (p4b - noab - 1))))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_18',10,MA
     &_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_18',
     &11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE ipeomccsdtq_x3_18_1(d_a,k_a_offset,d_b,k_b_offset,d_c,k
     &_c_offset)
C     i1 ( h9 p7 p8 )_vx + = -1 * Sum ( h10 ) * x ( h10 )_x * v ( h9 h10 p7 p8 )_v
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER d_a
      INTEGER k_a_offset
      INTEGER d_b
      INTEGER k_b_offset
      INTEGER d_c
      INTEGER k_c_offset
      INTEGER next
      INTEGER nprocs
      INTEGER count
      INTEGER dummy_p6b
      INTEGER h9b
      INTEGER p7b
      INTEGER p8b
      INTEGER dimc
      INTEGER l_c_sort
      INTEGER k_c_sort
      INTEGER h10b
      INTEGER dummy_p6b_1
      INTEGER h10b_1
      INTEGER h9b_2
      INTEGER h10b_2
      INTEGER p7b_2
      INTEGER p8b_2
      INTEGER dim_common
      INTEGER dima_sort
      INTEGER dima
      INTEGER dimb_sort
      INTEGER dimb
      INTEGER l_a_sort
      INTEGER k_a_sort
      INTEGER l_a
      INTEGER k_a
      INTEGER l_b_sort
      INTEGER k_b_sort
      INTEGER l_b
      INTEGER k_b
      INTEGER l_c
      INTEGER k_c
      INTEGER NXTVAL
      EXTERNAL NXTVAL
      nprocs = GA_NNODES()
      count = 0
      next = NXTVAL(nprocs)
      DO dummy_p6b = dummy,dummy
      DO h9b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (next .eq. count) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin
     &+h9b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+dummy_p6b-1)+int_mb(k_spin+h9b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),ieor(int_mb(k_sym+h9b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      dimc = int_mb(k_range+dummy_p6b-1) * int_mb(k_range+h9b-1) * int_m
     &b(k_range+p7b-1) * int_mb(k_range+p8b-1)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c_sort,k_c_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_18_1',0,MA_ERR)
      CALL DFILL(two*dimc,0.0d0,dbl_mb(k_c_sort),1)
      DO h10b = 1,noab
      IF (int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_spin+h10b-1)) THEN
      IF (ieor(int_mb(k_sym+dummy_p6b-1),int_mb(k_sym+h10b-1)) .eq. irre
     &p_x) THEN
      CALL TCE_RESTRICTED_2(dummy_p6b,h10b,dummy_p6b_1,h10b_1)
      CALL TCE_RESTRICTED_4(h9b,h10b,p7b,p8b,h9b_2,h10b_2,p7b_2,p8b_2)
      dim_common = int_mb(k_range+h10b-1)
      dima_sort = int_mb(k_range+dummy_p6b-1)
      dima = dim_common * dima_sort
      dimb_sort = int_mb(k_range+h9b-1) * int_mb(k_range+p7b-1) * int_mb
     &(k_range+p8b-1)
      dimb = dim_common * dimb_sort
      IF ((dima .gt. 0) .and. (dimb .gt. 0)) THEN
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a_sort,k_a_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_18_1',1,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dima,'noname',l_a,k_a)) CALL ERRQU
     &IT('ipeomccsdtq_x3_18_1',2,MA_ERR)
      CALL GET_HASH_BLOCK(d_a,dbl_mb(k_a),dima,dbl_mb(k_a_offset),(h10b_
     &1 - 1))
      CALL TCE_SORT_1(dbl_mb(k_a),dbl_mb(k_a_sort),int_mb(k_range+h10b-1
     &),1,1.0d0,.false.)
      IF (.not.MA_POP_STACK(l_a)) CALL ERRQUIT('ipeomccsdtq_x3_18_1',3,M
     &A_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b_sort,k_b_sort)) 
     &CALL ERRQUIT('ipeomccsdtq_x3_18_1',4,MA_ERR)
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimb,'noname',l_b,k_b)) CALL ERRQU
     &IT('ipeomccsdtq_x3_18_1',5,MA_ERR)
      IF ((h10b .lt. h9b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h9b_2 - 1 + (noab
     &+nvab) * (h10b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h10b-1
     &),int_mb(k_range+h9b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),4,3,2,1,-1.0d0,.false.)
      END IF
      IF ((h9b .le. h10b)) THEN
      CALL GET_HASH_BLOCK(d_b,dbl_mb(k_b),dimb,dbl_mb(k_b_offset),(p8b_2
     & - 1 + (noab+nvab) * (p7b_2 - 1 + (noab+nvab) * (h10b_2 - 1 + (noa
     &b+nvab) * (h9b_2 - 1)))))
      CALL TCE_SORT_4(dbl_mb(k_b),dbl_mb(k_b_sort),int_mb(k_range+h9b-1)
     &,int_mb(k_range+h10b-1),int_mb(k_range+p7b-1),int_mb(k_range+p8b-1
     &),4,3,1,2,1.0d0,.false.)
      END IF
      IF (.not.MA_POP_STACK(l_b)) CALL ERRQUIT('ipeomccsdtq_x3_18_1',6,M
     &A_ERR)
      CALL TCE_DGEMM('T','N',dima_sort,dimb_sort,dim_common,1.0d0,dbl_mb
     &(k_a_sort),dim_common,dbl_mb(k_b_sort),dim_common,1.0d0,dbl_mb(k_c
     &_sort),dima_sort)
      IF (.not.MA_POP_STACK(l_b_sort)) CALL ERRQUIT('ipeomccsdtq_x3_18_1
     &',7,MA_ERR)
      IF (.not.MA_POP_STACK(l_a_sort)) CALL ERRQUIT('ipeomccsdtq_x3_18_1
     &',8,MA_ERR)
      END IF
      END IF
      END IF
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,two*dimc,'noname',l_c,k_c)) CALL ERRQU
     &IT('ipeomccsdtq_x3_18_1',9,MA_ERR)
      CALL TCE_SORT_3(dbl_mb(k_c_sort),dbl_mb(k_c),int_mb(k_range+p8b-1)
     &,int_mb(k_range+p7b-1),int_mb(k_range+h9b-1),3,2,1,-1.0d0,.false.)
      CALL ADD_HASH_BLOCK(d_c,dbl_mb(k_c),dimc,dbl_mb(k_c_offset),(p8b -
     & noab - 1 + nvab * (p7b - noab - 1 + nvab * (h9b - 1))))
      IF (.not.MA_POP_STACK(l_c)) CALL ERRQUIT('ipeomccsdtq_x3_18_1',10,
     &MA_ERR)
      IF (.not.MA_POP_STACK(l_c_sort)) CALL ERRQUIT('ipeomccsdtq_x3_18_1
     &',11,MA_ERR)
      END IF
      END IF
      END IF
      END IF
      next = NXTVAL(nprocs)
      END IF
      count = count + 1
      END DO
      END DO
      END DO
      END DO
      next = NXTVAL(-nprocs)
      call GA_SYNC()
      RETURN
      END
      SUBROUTINE OFFSET_ipeomccsdtq_x3_18_1(l_a_offset,k_a_offset,size)
C     i1 ( h9 p7 p8 )_vx
      IMPLICIT NONE
#include "global.fh"
#include "mafdecls.fh"
#include "sym.fh"
#include "errquit.fh"
#include "tce.fh"
      INTEGER l_a_offset
      INTEGER k_a_offset
      INTEGER length
      INTEGER addr
      INTEGER dummy_p6b
      INTEGER h9b
      INTEGER p7b
      INTEGER p8b
      DOUBLE PRECISION size
      length = 0
      DO dummy_p6b = dummy,dummy
      DO h9b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      length = length + 1
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      IF (.not.MA_PUSH_GET(mt_dbl,2*length+1,'noname',l_a_offset,k_a_off
     &set)) CALL ERRQUIT('ipeomccsdtq_x3_18_1',0,MA_ERR)
      dbl_mb(k_a_offset) = dfloat(length)
      addr = 0
      size = 0.0d0
      DO dummy_p6b = dummy,dummy
      DO h9b = 1,noab
      DO p7b = noab+1,noab+nvab
      DO p8b = p7b,noab+nvab
      IF (int_mb(k_active+dummy_p6b-1) .ge. numact - 2) THEN
      IF (int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy_p6b-1) .eq. int_mb(k_
     &spin+p7b-1)+int_mb(k_spin+p8b-1)) THEN
      IF (ieor(int_mb(k_sym+h9b-1),ieor(int_mb(k_sym+dummy_p6b-1),ieor(i
     &nt_mb(k_sym+p7b-1),int_mb(k_sym+p8b-1)))) .eq. ieor(irrep_v,irrep_
     &x)) THEN
      IF ((.not.restricted).or.(int_mb(k_spin+h9b-1)+int_mb(k_spin+dummy
     &_p6b-1)+int_mb(k_spin+p7b-1)+int_mb(k_spin+p8b-1).ne.8)) THEN
      addr = addr + 1
      dbl_mb(k_a_offset+addr) = dfloat(p8b - noab - 1 + nvab * (p7b - no
     &ab - 1 + nvab * (h9b - 1)))
      dbl_mb(k_a_offset+length+addr) = size
      size = size + dfloat(int_mb(k_range+dummy_p6b-1)) * dfloat(int_mb(
     &k_range+h9b-1)) * dfloat(int_mb(k_range+p7b-1)) * dfloat(int_mb(k_
     &range+p8b-1))
      END IF
      END IF
      END IF
      END IF
      END DO
      END DO
      END DO
      END DO
      RETURN
      END
